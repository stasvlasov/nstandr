[{"path":"https://stasvlasov.github.io/nstandr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 nstandr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://stasvlasov.github.io/nstandr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stas Vlasov. Author, maintainer.","code":""},{"path":"https://stasvlasov.github.io/nstandr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vlasov S (2023). nstandr: Name Standardization R. R package version 0.0.0.9000, https://stasvlasov.github.io/nstandr/.","code":"@Manual{,   title = {nstandr: Name Standardization in R},   author = {Stas Vlasov},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://stasvlasov.github.io/nstandr/}, }"},{"path":"https://stasvlasov.github.io/nstandr/index.html","id":"nstandr-","dir":"","previous_headings":"","what":"Name Standardization in R","title":"Name Standardization in R","text":"package (Organizational) Names STANDardization R. nstandr reproduces procedures described Thoma et al. (2010), Magerman et al. (2006), Cockburn et al. (2009), Wasi & Flaaen (2015) .","code":""},{"path":"https://stasvlasov.github.io/nstandr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Name Standardization in R","text":"","code":"devtools::install_github(\"stasvlasov/nstandr\")"},{"path":"https://stasvlasov.github.io/nstandr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Name Standardization in R","text":"package provides main function standardize. function expect character vector organization names input returns standardized version. standardization methods described Magerman et al. (2006) Cockburn et al. (2009) can use standardize_magerman standardize_cockburn respectively. functions similar standardize(x, procedures=nstandr:::magerman_procedures_list)) standardize(x, procedures=nstandr:::cockburn_procedures_list)) additional options tweaking original procedures documentation. example standardize_magerman usage","code":"textConnection(\"SGS-THOMSON MICROELECTRONICS S.G.S. THOMSON MICROELECTRONICS S.R.L. S.G.S. THOMSON MICROELECTRONICS, S.R.L. S.G.S.-THOMSON MICROELECTRONICS S.R.L. SGS - THOMSON MICROELECTRONICS S.A. SGS - THOMSON MICROELECTRONICS S.R.L. SGS - THOMSON MICROELECTRONICS, INC. SGS - THOMSON MICROELECTRONICS, S.R.L. SGS THOMSON MICROELECTRONICS S.A. SGS THOMSON MICROELECTRONICS S.R.L. SGS THOMSON MICROELECTRONICS SA SGS THOMSON MICROELECTRONICS SRL SGS THOMSON MICROELECTRONICS, INC. SGS THOMSON MICROELECTRONICS, S.A. SGS- THOMSON MICROELECTRONICS, S.A. SGS THOMSON MICROELECTRONICS, S.R.L. SGS- THOMSON MICROELECTRONICS<BR>(PTE) LTD. SGS THOMSON-MICROELECTRONICS SA SGS-THOMSON MICROELECTRONIC S.A. SGS-THOMSON MICROELECTRONICS SGS-THOMSON MICROELECTRONICS GMBH SGS-THOMSON MICROELECTRONICS INC. SGS-THOMSON MICROELECTRONICS LIMITED SGS-THOMSON MICROELECTRONICS LTD. SGS-THOMSON MICROELECTRONICS PTE LTD SGS-THOMSON MICROELECTRONICS PTE LTD. SGS-THOMSON MICROELECTRONICS PTE. LIMITED SGS-THOMSON MICROELECTRONICS PTE. LTD. SGS-THOMSON MICROELECTRONICS S. R. L. SGS-THOMSON MICROELECTRONICS S.A SGS-THOMSON MICROELECTRONICS S.A. SGS-THOMSON MICROELECTRONICS S.P.A. SGS-THOMSON MICROELECTRONICS S.R. L. SGS-THOMSON MICROELECTRONICS S.R.L SGS-THOMSON MICROELECTRONICS S.R.L. SGS--THOMSON MICROELECTRONICS S.R.L. SGS-THOMSON MICROELECTRONICS SA SGS-THOMSON MICROELECTRONICS SPA SGS-THOMSON MICROELECTRONICS SRL SGS-THOMSON MICROELECTRONICS SRL. SGS-THOMSON MICROELECTRONICS, GMBH SGS-THOMSON MICROELECTRONICS, INC SGS-THOMSON MICROELECTRONICS, INC. SGS-THOMSON MICROELECTRONICS, LTD. SGS-THOMSON MICROELECTRONICS, PTE LTD. SGS-THOMSON MICROELECTRONICS, S.A. SGS-THOMSON MICROELECTRONICS, S.R.L. SGS-THOMSON MICROELECTRONICS, S.RL SGS-THOMSON MICROELECTRONICS, SA SGS-THOMSON MICROELECTRONICS, SA. SGS-THOMSON MICROELECTRONICS, SRL SGS-THOMSON MICROELECTRONICS,S.R.L.\") |>     readLines() |>     standardize_magerman(output_placement = \"append_to_x\")  #  # Applying standardization procedures: # ----------------------------------------------------------------- #  # * Upper casing                                               DONE # * Cleaning spaces                                            DONE # * Removing HTML codes                                        DONE # * Cleaning spaces (2)                                        DONE # * Replacing SGML coded characters                            DONE # * Replacing proprietary characters                           DONE # * Detecting Umlauts                                          DONE # * Replacing accented characters                              DONE # * Removing special characters                                DONE # * Fixing quotation irregularities                            DONE # * Removing double quotations                                 DONE # * Removing non alphanumeric characters (1)                   DONE # * Removing non alphanumeric characters (2)                   DONE # * Fixing comma and period irregularities                     DONE # * Removing legal form                                        DONE # * Removing common words                                      DONE # * Fixing spelling variations                                 DONE # * Condensing                                                 DONE # * Fixing umlaut variations                                   DONE #  # ----------------------------------------------------------------- # Standardization is done! #  #                                               x                     std_x #  1:                SGS-THOMSON MICROELECTRONICS SGSTHOMSONMICROELECTRONIC #  2:      S.G.S. THOMSON MICROELECTRONICS S.R.L. SGSTHOMSONMICROELECTRONIC #  3:     S.G.S. THOMSON MICROELECTRONICS, S.R.L. SGSTHOMSONMICROELECTRONIC #  4:      S.G.S.-THOMSON MICROELECTRONICS S.R.L. SGSTHOMSONMICROELECTRONIC #  5:         SGS - THOMSON MICROELECTRONICS S.A. SGSTHOMSONMICROELECTRONIC #  6:       SGS - THOMSON MICROELECTRONICS S.R.L. SGSTHOMSONMICROELECTRONIC #  7:        SGS - THOMSON MICROELECTRONICS, INC. SGSTHOMSONMICROELECTRONIC #  8:      SGS - THOMSON MICROELECTRONICS, S.R.L. SGSTHOMSONMICROELECTRONIC #  9:           SGS THOMSON MICROELECTRONICS S.A. SGSTHOMSONMICROELECTRONIC # 10:         SGS THOMSON MICROELECTRONICS S.R.L. SGSTHOMSONMICROELECTRONIC # 11:             SGS THOMSON MICROELECTRONICS SA SGSTHOMSONMICROELECTRONIC # 12:            SGS THOMSON MICROELECTRONICS SRL SGSTHOMSONMICROELECTRONIC # 13:          SGS THOMSON MICROELECTRONICS, INC. SGSTHOMSONMICROELECTRONIC # 14:          SGS THOMSON MICROELECTRONICS, S.A. SGSTHOMSONMICROELECTRONIC # 15:         SGS- THOMSON MICROELECTRONICS, S.A. SGSTHOMSONMICROELECTRONIC # 16:        SGS THOMSON MICROELECTRONICS, S.R.L. SGSTHOMSONMICROELECTRONIC # 17: SGS- THOMSON MICROELECTRONICS<BR>(PTE) LTD. SGSTHOMSONMICROELECTRONIC # 18:             SGS THOMSON-MICROELECTRONICS SA SGSTHOMSONMICROELECTRONIC # 19:            SGS-THOMSON MICROELECTRONIC S.A. SGSTHOMSONMICROELECTRONIC # 20:                SGS-THOMSON MICROELECTRONICS SGSTHOMSONMICROELECTRONIC # 21:           SGS-THOMSON MICROELECTRONICS GMBH SGSTHOMSONMICROELECTRONIC # 22:           SGS-THOMSON MICROELECTRONICS INC. SGSTHOMSONMICROELECTRONIC # 23:        SGS-THOMSON MICROELECTRONICS LIMITED SGSTHOMSONMICROELECTRONIC # 24:           SGS-THOMSON MICROELECTRONICS LTD. SGSTHOMSONMICROELECTRONIC # 25:        SGS-THOMSON MICROELECTRONICS PTE LTD SGSTHOMSONMICROELECTRONIC # 26:       SGS-THOMSON MICROELECTRONICS PTE LTD. SGSTHOMSONMICROELECTRONIC # 27:   SGS-THOMSON MICROELECTRONICS PTE. LIMITED SGSTHOMSONMICROELECTRONIC # 28:      SGS-THOMSON MICROELECTRONICS PTE. LTD. SGSTHOMSONMICROELECTRONIC # 29:       SGS-THOMSON MICROELECTRONICS S. R. L. SGSTHOMSONMICROELECTRONIC # 30:            SGS-THOMSON MICROELECTRONICS S.A SGSTHOMSONMICROELECTRONIC # 31:           SGS-THOMSON MICROELECTRONICS S.A. SGSTHOMSONMICROELECTRONIC # 32:         SGS-THOMSON MICROELECTRONICS S.P.A. SGSTHOMSONMICROELECTRONIC # 33:        SGS-THOMSON MICROELECTRONICS S.R. L. SGSTHOMSONMICROELECTRONIC # 34:          SGS-THOMSON MICROELECTRONICS S.R.L SGSTHOMSONMICROELECTRONIC # 35:         SGS-THOMSON MICROELECTRONICS S.R.L. SGSTHOMSONMICROELECTRONIC # 36:        SGS--THOMSON MICROELECTRONICS S.R.L. SGSTHOMSONMICROELECTRONIC # 37:             SGS-THOMSON MICROELECTRONICS SA SGSTHOMSONMICROELECTRONIC # 38:            SGS-THOMSON MICROELECTRONICS SPA SGSTHOMSONMICROELECTRONIC # 39:            SGS-THOMSON MICROELECTRONICS SRL SGSTHOMSONMICROELECTRONIC # 40:           SGS-THOMSON MICROELECTRONICS SRL. SGSTHOMSONMICROELECTRONIC # 41:          SGS-THOMSON MICROELECTRONICS, GMBH SGSTHOMSONMICROELECTRONIC # 42:           SGS-THOMSON MICROELECTRONICS, INC SGSTHOMSONMICROELECTRONIC # 43:          SGS-THOMSON MICROELECTRONICS, INC. SGSTHOMSONMICROELECTRONIC # 44:          SGS-THOMSON MICROELECTRONICS, LTD. SGSTHOMSONMICROELECTRONIC # 45:      SGS-THOMSON MICROELECTRONICS, PTE LTD. SGSTHOMSONMICROELECTRONIC # 46:          SGS-THOMSON MICROELECTRONICS, S.A. SGSTHOMSONMICROELECTRONIC # 47:        SGS-THOMSON MICROELECTRONICS, S.R.L. SGSTHOMSONMICROELECTRONIC # 48:          SGS-THOMSON MICROELECTRONICS, S.RL SGSTHOMSONMICROELECTRONIC # 49:            SGS-THOMSON MICROELECTRONICS, SA SGSTHOMSONMICROELECTRONIC # 50:           SGS-THOMSON MICROELECTRONICS, SA. SGSTHOMSONMICROELECTRONIC # 51:           SGS-THOMSON MICROELECTRONICS, SRL SGSTHOMSONMICROELECTRONIC # 52:         SGS-THOMSON MICROELECTRONICS,S.R.L. SGSTHOMSONMICROELECTRONIC #                                               x                     std_x"},{"path":"https://stasvlasov.github.io/nstandr/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Name Standardization in R","text":"Magerman, T., Looy, V., Bart, & Song, X. (2006). Data Production Methods Harmonized Patent Statistics: Patentee Name Standardization (SSRN Scholarly Paper . ID 944470). Rochester, NY: Social Science Research Network. Retrieved http://papers.ssrn.com/abstract=944470 Thoma, G., Torrisi, S., Gambardella, ., Guellec, D., Hall, B. H., & Harhoff, D. (2010). Harmonizing combining large datasets - application firm-level patent accounting data. National Bureau Economic Research Working Paper Series, (15851). Retrieved http://www.nber.org/papers/w15851 http://www.nber.org/papers/w15851.pdf Wasi, N., & Flaaen, . (2015). Record linkage using Stata: Preprocessing, linking, reviewing utilities. Stata Journal, 15(3), 672-697. Retrieved https://ebp-projects.isr.umich.edu/NCRN/papers/wasi_flaaen_statarecordlinkageutilities.pdf","code":""},{"path":"https://stasvlasov.github.io/nstandr/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Name Standardization in R","text":"Hard dependencies (Depends field DESCRIPTION file)","code":""},{"path":"https://stasvlasov.github.io/nstandr/index.html","id":"required-packages","dir":"","previous_headings":"Dependencies","what":"Required packages","title":"Name Standardization in R","text":"Required packages (Imports field DESCRIPTION file)","code":""},{"path":"https://stasvlasov.github.io/nstandr/index.html","id":"suggested-packages","dir":"","previous_headings":"Dependencies","what":"Suggested packages","title":"Name Standardization in R","text":"Suggested packages (Suggests field DESCRIPTION file)","code":""},{"path":"https://stasvlasov.github.io/nstandr/index.html","id":"development-dependencies-and-tools","dir":"","previous_headings":"Dependencies","what":"Development dependencies and tools","title":"Name Standardization in R","text":"packages used developing building nstandr Useful packages development","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/browse_dot_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a temporary html file with visualization of given nstandr procedures and opens it in a browser (specified in options('browser')). This requires DiagrammeR package to be installed. If you do not have those you can cat() the returned string from `nstandr:::make_dot_graph()' to the R console and copy it to some web tool for dot visualization (e.g.http://magjac.com/graphviz-visual-editor) — browse_dot_graph","title":"Generates a temporary html file with visualization of given nstandr procedures and opens it in a browser (specified in options('browser')). This requires DiagrammeR package to be installed. If you do not have those you can cat() the returned string from `nstandr:::make_dot_graph()' to the R console and copy it to some web tool for dot visualization (e.g.http://magjac.com/graphviz-visual-editor) — browse_dot_graph","text":"Generates temporary html file visualization given nstandr procedures opens browser (specified options('browser')). requires DiagrammeR package installed. can cat() returned string `nstandr:::make_dot_graph()' R console copy web tool dot visualization (e.g.http://magjac.com/graphviz-visual-editor)","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/browse_dot_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a temporary html file with visualization of given nstandr procedures and opens it in a browser (specified in options('browser')). This requires DiagrammeR package to be installed. If you do not have those you can cat() the returned string from `nstandr:::make_dot_graph()' to the R console and copy it to some web tool for dot visualization (e.g.http://magjac.com/graphviz-visual-editor) — browse_dot_graph","text":"","code":"browse_dot_graph(procedures_list, width = NULL, height = NULL, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/browse_dot_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a temporary html file with visualization of given nstandr procedures and opens it in a browser (specified in options('browser')). This requires DiagrammeR package to be installed. If you do not have those you can cat() the returned string from `nstandr:::make_dot_graph()' to the R console and copy it to some web tool for dot visualization (e.g.http://magjac.com/graphviz-visual-editor) — browse_dot_graph","text":"procedures_list List procedures. See sandardize specify procedures list. width width procedures graph pixels height height procedures graph pixels ... Arguments passed make_dot_graph","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/browse_dot_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a temporary html file with visualization of given nstandr procedures and opens it in a browser (specified in options('browser')). This requires DiagrammeR package to be installed. If you do not have those you can cat() the returned string from `nstandr:::make_dot_graph()' to the R console and copy it to some web tool for dot visualization (e.g.http://magjac.com/graphviz-visual-editor) — browse_dot_graph","text":"object class ‘htmlwidget’ can used Rmarkdown","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/check_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Assumes that rows (if logical) are same length as x — check_rows","title":"Assumes that rows (if logical) are same length as x — check_rows","text":"Assumes rows (logical) length x","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/check_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assumes that rows (if logical) are same length as x — check_rows","text":"","code":"check_rows(rows, x, which_call_to_report = -1L, null_ok = TRUE, na_ok = FALSE)"},{"path":"https://stasvlasov.github.io/nstandr/reference/check_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assumes that rows (if logical) are same length as x — check_rows","text":"rows either numeric logical vector x object standardize which_call_to_report reporting issues function call indicate reference null_ok Whether NULL valid value na_ok Whether NA valid value","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/check_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assumes that rows (if logical) are same length as x — check_rows","text":"nothing","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_combabbrev.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapses single character sequences — cockburn_combabbrev","title":"Collapses single character sequences — cockburn_combabbrev","text":"Collapses single character sequences","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_combabbrev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapses single character sequences — cockburn_combabbrev","text":"","code":"cockburn_combabbrev(x, wrap_in_spaces = TRUE, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_combabbrev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapses single character sequences — cockburn_combabbrev","text":"x Object (table vector) wrap_in_spaces Whether wrap strings spaces processing algorithm assumes assumes string begins ends space. Default TRUE. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_combabbrev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapses single character sequences — cockburn_combabbrev","text":"standardized names table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_corp.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Corporates (code - 'firm') — cockburn_detect_corp","title":"Detect Corporates (code - 'firm') — cockburn_detect_corp","text":"non_corporates.file. Source - https://sites.google.com/site/patentdataproject/Home/posts/namestandardizationroutinesuploaded","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_corp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Corporates (code - 'firm') — cockburn_detect_corp","text":"","code":"cockburn_detect_corp(   x,   patterns = cockburn_patterns_corp,   patterns_col = 1,   patterns_codes_col = 2,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_codes = \"firm\",   output_codes_col_name = \"{col_name_}entity_type\",   codes_omitted_rows_value = NULL,   no_match_code = NULL,   merge_existing_codes = \"append_to_existing\",   return_only_codes = FALSE,   return_only_first_detected_code = TRUE,   return_merge_codes_description = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_corp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Corporates (code - 'firm') — cockburn_detect_corp","text":"x Vector table detect . patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns table specifies column use. Default 1. patterns_codes_col patterns table column use codes column. Default 2. patterns_type Specifies kind(s) patterns. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column patterns table can specify types patterns pattern. set patterns.type ignored. Default NULL. patterns_codes provided use codes. length patterns. Default NULL. output_codes_col_name provided use name codes column (new exist one update) results. codes_omitted_rows_value rows set. Use value fill omitted rows. update existing codes column Default NULL means use initial codes values omitted rows. codes col update omited rows filled NA. no_match_code provided code records get match . merge_existing_codes Whether merge newly detected codes existing. Options : return_only_codes toggled just return codes vector. return_only_first_detected_code TRUE return codes first detected pattern. FALSE return list matched codes. Default TRUE. (Currently affect performance) return_merge_codes_description Return description choices merge_existing_codes paramenter. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_corp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Corporates (code - 'firm') — cockburn_detect_corp","text":"standardized names table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_govt.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Goverment Organizations (Non-Corporates group) — cockburn_detect_govt","title":"Detect Goverment Organizations (Non-Corporates group) — cockburn_detect_govt","text":"non_corporates.file. Source - https://sites.google.com/site/patentdataproject/Home/posts/namestandardizationroutinesuploaded","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_govt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Goverment Organizations (Non-Corporates group) — cockburn_detect_govt","text":"","code":"cockburn_detect_govt(   x,   patterns = cockburn_patterns_govt,   patterns_col = 1,   patterns_codes_col = 2,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_codes = \"govt\",   output_codes_col_name = \"{col_name_}entity_type\",   codes_omitted_rows_value = NULL,   no_match_code = NULL,   merge_existing_codes = \"append_to_existing\",   return_only_codes = FALSE,   return_only_first_detected_code = TRUE,   return_merge_codes_description = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_govt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Goverment Organizations (Non-Corporates group) — cockburn_detect_govt","text":"x Vector table detect . patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns table specifies column use. Default 1. patterns_codes_col patterns table column use codes column. Default 2. patterns_type Specifies kind(s) patterns. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column patterns table can specify types patterns pattern. set patterns.type ignored. Default NULL. patterns_codes provided use codes. length patterns. Default NULL. output_codes_col_name provided use name codes column (new exist one update) results. codes_omitted_rows_value rows set. Use value fill omitted rows. update existing codes column Default NULL means use initial codes values omitted rows. codes col update omited rows filled NA. no_match_code provided code records get match . merge_existing_codes Whether merge newly detected codes existing. Options : return_only_codes toggled just return codes vector. return_only_first_detected_code TRUE return codes first detected pattern. FALSE return list matched codes. Default TRUE. (Currently affect performance) return_merge_codes_description Return description choices merge_existing_codes paramenter. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_govt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Goverment Organizations (Non-Corporates group) — cockburn_detect_govt","text":"standardized names table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_hosp.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Hospitals (Non-Corporates group) — cockburn_detect_hosp","title":"Detect Hospitals (Non-Corporates group) — cockburn_detect_hosp","text":"non_corporates.file. Source - https://sites.google.com/site/patentdataproject/Home/posts/namestandardizationroutinesuploaded","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_hosp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Hospitals (Non-Corporates group) — cockburn_detect_hosp","text":"","code":"cockburn_detect_hosp(   x,   patterns = cockburn_patterns_hosp,   patterns_col = 1,   patterns_codes_col = 2,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_codes = \"hosp\",   output_codes_col_name = \"{col_name_}entity_type\",   codes_omitted_rows_value = NULL,   no_match_code = NULL,   merge_existing_codes = \"append_to_existing\",   return_only_codes = FALSE,   return_only_first_detected_code = TRUE,   return_merge_codes_description = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_hosp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Hospitals (Non-Corporates group) — cockburn_detect_hosp","text":"x Vector table detect . patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns table specifies column use. Default 1. patterns_codes_col patterns table column use codes column. Default 2. patterns_type Specifies kind(s) patterns. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column patterns table can specify types patterns pattern. set patterns.type ignored. Default NULL. patterns_codes provided use codes. length patterns. Default NULL. output_codes_col_name provided use name codes column (new exist one update) results. codes_omitted_rows_value rows set. Use value fill omitted rows. update existing codes column Default NULL means use initial codes values omitted rows. codes col update omited rows filled NA. no_match_code provided code records get match . merge_existing_codes Whether merge newly detected codes existing. Options : return_only_codes toggled just return codes vector. return_only_first_detected_code TRUE return codes first detected pattern. FALSE return list matched codes. Default TRUE. (Currently affect performance) return_merge_codes_description Return description choices merge_existing_codes paramenter. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_hosp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Hospitals (Non-Corporates group) — cockburn_detect_hosp","text":"standardized names table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_indiv.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Individuals (Non-Corporates group) — cockburn_detect_indiv","title":"Detect Individuals (Non-Corporates group) — cockburn_detect_indiv","text":"non_corporates.file. Source - https://sites.google.com/site/patentdataproject/Home/posts/namestandardizationroutinesuploaded","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_indiv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Individuals (Non-Corporates group) — cockburn_detect_indiv","text":"","code":"cockburn_detect_indiv(   x,   patterns = cockburn_patterns_indiv,   patterns_col = 1,   patterns_codes_col = 2,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_codes = \"indiv\",   output_codes_col_name = \"{col_name_}entity_type\",   codes_omitted_rows_value = NULL,   no_match_code = NULL,   merge_existing_codes = \"append_to_existing\",   return_only_codes = FALSE,   return_only_first_detected_code = TRUE,   return_merge_codes_description = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_indiv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Individuals (Non-Corporates group) — cockburn_detect_indiv","text":"x Vector table detect . patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns table specifies column use. Default 1. patterns_codes_col patterns table column use codes column. Default 2. patterns_type Specifies kind(s) patterns. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column patterns table can specify types patterns pattern. set patterns.type ignored. Default NULL. patterns_codes provided use codes. length patterns. Default NULL. output_codes_col_name provided use name codes column (new exist one update) results. codes_omitted_rows_value rows set. Use value fill omitted rows. update existing codes column Default NULL means use initial codes values omitted rows. codes col update omited rows filled NA. no_match_code provided code records get match . merge_existing_codes Whether merge newly detected codes existing. Options : return_only_codes toggled just return codes vector. return_only_first_detected_code TRUE return codes first detected pattern. FALSE return list matched codes. Default TRUE. (Currently affect performance) return_merge_codes_description Return description choices merge_existing_codes paramenter. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_indiv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Individuals (Non-Corporates group) — cockburn_detect_indiv","text":"standardized names table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Non-profit Institutes (Non-Corporates group) — cockburn_detect_inst","title":"Detect Non-profit Institutes (Non-Corporates group) — cockburn_detect_inst","text":"non_corporates.file. Source - https://sites.google.com/site/patentdataproject/Home/posts/namestandardizationroutinesuploaded","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Non-profit Institutes (Non-Corporates group) — cockburn_detect_inst","text":"","code":"cockburn_detect_inst(   x,   patterns = cockburn_patterns_inst,   patterns_col = 1,   patterns_codes_col = 2,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_codes = \"inst\",   output_codes_col_name = \"{col_name_}entity_type\",   codes_omitted_rows_value = NULL,   no_match_code = NULL,   merge_existing_codes = \"append_to_existing\",   return_only_codes = FALSE,   return_only_first_detected_code = TRUE,   return_merge_codes_description = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Non-profit Institutes (Non-Corporates group) — cockburn_detect_inst","text":"x Vector table detect . patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns table specifies column use. Default 1. patterns_codes_col patterns table column use codes column. Default 2. patterns_type Specifies kind(s) patterns. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column patterns table can specify types patterns pattern. set patterns.type ignored. Default NULL. patterns_codes provided use codes. length patterns. Default NULL. output_codes_col_name provided use name codes column (new exist one update) results. codes_omitted_rows_value rows set. Use value fill omitted rows. update existing codes column Default NULL means use initial codes values omitted rows. codes col update omited rows filled NA. no_match_code provided code records get match . merge_existing_codes Whether merge newly detected codes existing. Options : return_only_codes toggled just return codes vector. return_only_first_detected_code TRUE return codes first detected pattern. FALSE return list matched codes. Default TRUE. (Currently affect performance) return_merge_codes_description Return description choices merge_existing_codes paramenter. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Non-profit Institutes (Non-Corporates group) — cockburn_detect_inst","text":"standardized names table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst_conds.html","id":null,"dir":"Reference","previous_headings":"","what":"Detects Non-profit institutes with special conditions — cockburn_detect_inst_conds","title":"Detects Non-profit institutes with special conditions — cockburn_detect_inst_conds","text":"Detects Non-profit institutes special conditions","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst_conds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detects Non-profit institutes with special conditions — cockburn_detect_inst_conds","text":"","code":"cockburn_detect_inst_conds(   x,   merge_existing_codes = \"append_to_existing\",   output_codes_col_name = \"{col_name_}entity_type\",   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst_conds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detects Non-profit institutes with special conditions — cockburn_detect_inst_conds","text":"x table. Expected x column codes universities merge_existing_codes detect_patterns() output_codes_col_name column codes universities (\"univ\"). Default last column x ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst_conds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detects Non-profit institutes with special conditions — cockburn_detect_inst_conds","text":"standardized names table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst_conds_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Detects Non-profit institutes with special conditions — cockburn_detect_inst_conds_1","title":"Detects Non-profit institutes with special conditions — cockburn_detect_inst_conds_1","text":"STATA equivalent: replace asstype = \"inst\" strpos(standard_name,\" COUNCIL \")>0 & strpos(standard_name,\" RES \")>0","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst_conds_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detects Non-profit institutes with special conditions — cockburn_detect_inst_conds_1","text":"","code":"cockburn_detect_inst_conds_1(   x,   patterns = \" COUNCIL OF .* RES | RES .* COUNCIL OF \",   patterns_col = 1,   patterns_codes_col = 2,   patterns_type = \"regex\",   patterns_type_col = NULL,   patterns_codes = \"inst\",   output_codes_col_name = \"{col_name_}entity_type\",   codes_omitted_rows_value = NULL,   no_match_code = NULL,   merge_existing_codes = \"append_to_existing\",   return_only_codes = FALSE,   return_only_first_detected_code = TRUE,   return_merge_codes_description = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst_conds_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detects Non-profit institutes with special conditions — cockburn_detect_inst_conds_1","text":"x Vector table detect . patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns table specifies column use. Default 1. patterns_codes_col patterns table column use codes column. Default 2. patterns_type Specifies kind(s) patterns. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column patterns table can specify types patterns pattern. set patterns.type ignored. Default NULL. patterns_codes provided use codes. length patterns. Default NULL. output_codes_col_name provided use name codes column (new exist one update) results. codes_omitted_rows_value rows set. Use value fill omitted rows. update existing codes column Default NULL means use initial codes values omitted rows. codes col update omited rows filled NA. no_match_code provided code records get match . merge_existing_codes Whether merge newly detected codes existing. Options : return_only_codes toggled just return codes vector. return_only_first_detected_code TRUE return codes first detected pattern. FALSE return list matched codes. Default TRUE. (Currently affect performance) return_merge_codes_description Return description choices merge_existing_codes paramenter. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst_conds_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detects Non-profit institutes with special conditions — cockburn_detect_inst_conds_1","text":"standardized names table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst_conds_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Detects Non-profit institutes with special conditions — cockburn_detect_inst_conds_2","title":"Detects Non-profit institutes with special conditions — cockburn_detect_inst_conds_2","text":"STATA equivalent replace asstype = \"inst\" strpos(standard_name,\" FOUND \")~=0 & asstype~=\"univ\" assume bug: \" FOUND \")~=0 -> \" FOUND \")>0 replace asstype = \"inst\" strpos(standard_name,\" INST \")>0 & asstype~=\"univ\"","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst_conds_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detects Non-profit institutes with special conditions — cockburn_detect_inst_conds_2","text":"","code":"cockburn_detect_inst_conds_2(   x,   output_codes_col_name = \"{col_name_}entity_type\",   merge_existing_codes = \"append_to_existing\",   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst_conds_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detects Non-profit institutes with special conditions — cockburn_detect_inst_conds_2","text":"x table. Expected x column codes universities output_codes_col_name column codes universities (\"univ\"). Default last column x merge_existing_codes detect_patterns() ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst_conds_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detects Non-profit institutes with special conditions — cockburn_detect_inst_conds_2","text":"standardized names table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst_german.html","id":null,"dir":"Reference","previous_headings":"","what":"Detects German Non-profit institutes — cockburn_detect_inst_german","title":"Detects German Non-profit institutes — cockburn_detect_inst_german","text":"\"EINGETRAGENER VEREIN. NON PROFIT SOCIETY/ASSOCIATION.\"","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst_german.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detects German Non-profit institutes — cockburn_detect_inst_german","text":"","code":"cockburn_detect_inst_german(   x,   output_codes_col_name = \"{col_name_}entity_type\",   merge_existing_codes = \"append_to_existing\",   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst_german.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detects German Non-profit institutes — cockburn_detect_inst_german","text":"x table output_codes_col_name detect_patterns() merge_existing_codes detect_patterns() ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_inst_german.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detects German Non-profit institutes — cockburn_detect_inst_german","text":"standardized names table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies Entity Type — cockburn_detect_type","title":"Identifies Entity Type — cockburn_detect_type","text":"Identifies Entity Type","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies Entity Type — cockburn_detect_type","text":"","code":"cockburn_detect_type(x, verbose = FALSE, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies Entity Type — cockburn_detect_type","text":"x vector table verbose debuging. set message procedures done. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies Entity Type — cockburn_detect_type","text":"standardized names table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_univ.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Universities (Non-Corporates group) — cockburn_detect_univ","title":"Detect Universities (Non-Corporates group) — cockburn_detect_univ","text":"non_corporates.file. Source - https://sites.google.com/site/patentdataproject/Home/posts/namestandardizationroutinesuploaded","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_univ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Universities (Non-Corporates group) — cockburn_detect_univ","text":"","code":"cockburn_detect_univ(   x,   patterns = cockburn_patterns_univ,   patterns_col = 1,   patterns_codes_col = 2,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_codes = \"univ\",   output_codes_col_name = \"{col_name_}entity_type\",   codes_omitted_rows_value = NULL,   no_match_code = NULL,   merge_existing_codes = \"append_to_existing\",   return_only_codes = FALSE,   return_only_first_detected_code = TRUE,   return_merge_codes_description = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_univ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Universities (Non-Corporates group) — cockburn_detect_univ","text":"x Vector table detect . patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns table specifies column use. Default 1. patterns_codes_col patterns table column use codes column. Default 2. patterns_type Specifies kind(s) patterns. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column patterns table can specify types patterns pattern. set patterns.type ignored. Default NULL. patterns_codes provided use codes. length patterns. Default NULL. output_codes_col_name provided use name codes column (new exist one update) results. codes_omitted_rows_value rows set. Use value fill omitted rows. update existing codes column Default NULL means use initial codes values omitted rows. codes col update omited rows filled NA. no_match_code provided code records get match . merge_existing_codes Whether merge newly detected codes existing. Options : return_only_codes toggled just return codes vector. return_only_first_detected_code TRUE return codes first detected pattern. FALSE return list matched codes. Default TRUE. (Currently affect performance) return_merge_codes_description Return description choices merge_existing_codes paramenter. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_univ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Universities (Non-Corporates group) — cockburn_detect_univ","text":"standardized names table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_uspto.html","id":null,"dir":"Reference","previous_headings":"","what":"Special USPTO codes. Codes as 'indiv' — cockburn_detect_uspto","title":"Special USPTO codes. Codes as 'indiv' — cockburn_detect_uspto","text":"Special USPTO codes. Codes 'indiv'","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_uspto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Special USPTO codes. Codes as 'indiv' — cockburn_detect_uspto","text":"","code":"cockburn_detect_uspto(   x,   patterns = \";\",   patterns_col = 1,   patterns_codes_col = 2,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_codes = \"indiv\",   output_codes_col_name = \"{col_name_}entity_type\",   codes_omitted_rows_value = NULL,   no_match_code = NULL,   merge_existing_codes = \"replace_all\",   return_only_codes = FALSE,   return_only_first_detected_code = TRUE,   return_merge_codes_description = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_uspto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Special USPTO codes. Codes as 'indiv' — cockburn_detect_uspto","text":"x Vector table detect . patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns table specifies column use. Default 1. patterns_codes_col patterns table column use codes column. Default 2. patterns_type Specifies kind(s) patterns. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column patterns table can specify types patterns pattern. set patterns.type ignored. Default NULL. patterns_codes provided use codes. length patterns. Default NULL. output_codes_col_name provided use name codes column (new exist one update) results. codes_omitted_rows_value rows set. Use value fill omitted rows. update existing codes column Default NULL means use initial codes values omitted rows. codes col update omited rows filled NA. no_match_code provided code records get match . merge_existing_codes Whether merge newly detected codes existing. Options : return_only_codes toggled just return codes vector. return_only_first_detected_code TRUE return codes first detected pattern. FALSE return list matched codes. Default TRUE. (Currently affect performance) return_merge_codes_description Return description choices merge_existing_codes paramenter. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_detect_uspto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Special USPTO codes. Codes as 'indiv' — cockburn_detect_uspto","text":"standardized names table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_remove_standard_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates so called stem name (a name with all legal entity identifiers removed) — cockburn_remove_standard_names","title":"Creates so called stem name (a name with all legal entity identifiers removed) — cockburn_remove_standard_names","text":"Creates called stem name (name legal entity identifiers removed)","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_remove_standard_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates so called stem name (a name with all legal entity identifiers removed) — cockburn_remove_standard_names","text":"","code":"cockburn_remove_standard_names(   x,   patterns = cockburn_patterns_stem_name,   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = \" \",   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_remove_standard_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates so called stem name (a name with all legal entity identifiers removed) — cockburn_remove_standard_names","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_remove_standard_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates so called stem name (a name with all legal entity identifiers removed) — cockburn_remove_standard_names","text":"standardized names table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_remove_uspto.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes special USPTO codes. — cockburn_remove_uspto","title":"Removes special USPTO codes. — cockburn_remove_uspto","text":"Removes special USPTO codes.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_remove_uspto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes special USPTO codes. — cockburn_remove_uspto","text":"","code":"cockburn_remove_uspto(   x,   patterns = cockburn_patterns_uspto,   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_remove_uspto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes special USPTO codes. — cockburn_remove_uspto","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_remove_uspto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes special USPTO codes. — cockburn_remove_uspto","text":"standardized names table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_compustat.html","id":null,"dir":"Reference","previous_headings":"","what":"COMPUSTAT specific standardization for organizational names — cockburn_replace_compustat","title":"COMPUSTAT specific standardization for organizational names — cockburn_replace_compustat","text":"COMPUSTAT specific standardization organizational names","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_compustat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"COMPUSTAT specific standardization for organizational names — cockburn_replace_compustat","text":"","code":"cockburn_replace_compustat(   x,   patterns = cockburn_patterns_compustat,   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_compustat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"COMPUSTAT specific standardization for organizational names — cockburn_replace_compustat","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_compustat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"COMPUSTAT specific standardization for organizational names — cockburn_replace_compustat","text":"standardized names table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_compustat_names.html","id":null,"dir":"Reference","previous_headings":"","what":"COMPUSTAT specific standardization for organizational names. Full name replacements. — cockburn_replace_compustat_names","title":"COMPUSTAT specific standardization for organizational names. Full name replacements. — cockburn_replace_compustat_names","text":"COMPUSTAT specific standardization organizational names. Full name replacements.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_compustat_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"COMPUSTAT specific standardization for organizational names. Full name replacements. — cockburn_replace_compustat_names","text":"","code":"cockburn_replace_compustat_names(   x,   patterns = cockburn_patterns_compustat_names,   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"trim_exact\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_compustat_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"COMPUSTAT specific standardization for organizational names. Full name replacements. — cockburn_replace_compustat_names","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_compustat_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"COMPUSTAT specific standardization for organizational names. Full name replacements. — cockburn_replace_compustat_names","text":"standardized names table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_derwent.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs Derwent standardization of organizational names — cockburn_replace_derwent","title":"Performs Derwent standardization of organizational names — cockburn_replace_derwent","text":"version Cockburn, . M., . Agrawal, J. Bessen, J. H. S. Graham, B. H. Hall, M. MacGarvie (2009), NBER Patent Citations Datafile Update. differs original dervert standartization","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_derwent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs Derwent standardization of organizational names — cockburn_replace_derwent","text":"","code":"cockburn_replace_derwent(   x,   patterns = cockburn_patterns_derwent,   patterns_col = 1,   patterns_mode = \"first\",   patterns_mode_col = NULL,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_derwent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs Derwent standardization of organizational names — cockburn_replace_derwent","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_derwent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs Derwent standardization of organizational names — cockburn_replace_derwent","text":"standardized names table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_govt.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleanup Goverment Organizations (Non-Corporates group) — cockburn_replace_govt","title":"Cleanup Goverment Organizations (Non-Corporates group) — cockburn_replace_govt","text":"non_corporates.file. Source - https://sites.google.com/site/patentdataproject/Home/posts/namestandardizationroutinesuploaded","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_govt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleanup Goverment Organizations (Non-Corporates group) — cockburn_replace_govt","text":"","code":"cockburn_replace_govt(   x,   patterns = cockburn_patterns_govt_cleanup,   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_govt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleanup Goverment Organizations (Non-Corporates group) — cockburn_replace_govt","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_govt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cleanup Goverment Organizations (Non-Corporates group) — cockburn_replace_govt","text":"standardized names table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_punctuation.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes punctuation and standardise some symbols. — cockburn_replace_punctuation","title":"Removes punctuation and standardise some symbols. — cockburn_replace_punctuation","text":"Removes punctuation standardise symbols.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_punctuation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes punctuation and standardise some symbols. — cockburn_replace_punctuation","text":"","code":"cockburn_replace_punctuation(x, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_punctuation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes punctuation and standardise some symbols. — cockburn_replace_punctuation","text":"x object ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_punctuation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes punctuation and standardise some symbols. — cockburn_replace_punctuation","text":"standardized names table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_standard_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Create standard name — cockburn_replace_standard_names","title":"Create standard name — cockburn_replace_standard_names","text":"Create standard name","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_standard_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create standard name — cockburn_replace_standard_names","text":"","code":"cockburn_replace_standard_names(x, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_standard_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create standard name — cockburn_replace_standard_names","text":"x object ... Arguments passed replace_patterns patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide .","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_standard_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create standard name — cockburn_replace_standard_names","text":"standardized names table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleanup Entity Type — cockburn_replace_type","title":"Cleanup Entity Type — cockburn_replace_type","text":"Cleanup Entity Type","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleanup Entity Type — cockburn_replace_type","text":"","code":"cockburn_replace_type(x, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleanup Entity Type — cockburn_replace_type","text":"x vector table ... Arguments passed replace_patterns patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide .","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cleanup Entity Type — cockburn_replace_type","text":"standardized names table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_univ.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleanup Universities (Non-Corporates group) — cockburn_replace_univ","title":"Cleanup Universities (Non-Corporates group) — cockburn_replace_univ","text":"non_corporates.file. Source - https://sites.google.com/site/patentdataproject/Home/posts/namestandardizationroutinesuploaded","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_univ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleanup Universities (Non-Corporates group) — cockburn_replace_univ","text":"","code":"cockburn_replace_univ(   x,   patterns = cockburn_patterns_univ_cleanup,   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_univ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleanup Universities (Non-Corporates group) — cockburn_replace_univ","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/cockburn_replace_univ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cleanup Universities (Non-Corporates group) — cockburn_replace_univ","text":"standardized names table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/defactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Defactor the object — defactor","title":"Defactor the object — defactor","text":"Returns object type without factors","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/defactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defactor the object — defactor","text":"","code":"defactor(   x,   conv2dt = c(\"only.tables\", \"all.but.atomic\", \"all.but.lists\", \"all\", \"none\"),   x_atomic_name = NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/defactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defactor the object — defactor","text":"x object conv2dt convert data.table x_atomic_name Name use col name x atomic ... Arguments passed defactor_vector check.numeric check vector numeric. Default TRUE. Takes longer check avoids type conversion (numeric character).","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/defactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defactor the object — defactor","text":"object type without factors","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/defactor_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts factor to character — defactor_vector","title":"Converts factor to character — defactor_vector","text":"Converts factor character","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/defactor_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts factor to character — defactor_vector","text":"","code":"defactor_vector(x, check.numeric = FALSE)"},{"path":"https://stasvlasov.github.io/nstandr/reference/defactor_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts factor to character — defactor_vector","text":"x vector check.numeric check vector numeric. Default TRUE. Takes longer check avoids type conversion (numeric character).","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/defactor_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts factor to character — defactor_vector","text":"character vector","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/detect_legal_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect legal form — detect_legal_form","title":"Detect legal form — detect_legal_form","text":"Detect legal form","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/detect_legal_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect legal form — detect_legal_form","text":"","code":"detect_legal_form(x, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/detect_legal_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect legal form — detect_legal_form","text":"x table ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/detect_legal_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect legal form — detect_legal_form","text":"standardized names table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/detect_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Codes strings (e.g., organizational names) based on certain patterns — detect_patterns","title":"Codes strings (e.g., organizational names) based on certain patterns — detect_patterns","text":"Codes strings (e.g., organizational names) based certain patterns fixed  -  Match pattern string within target vector begins  -  Match pattern string beggining target vector trim_begins  -  Match pattern string beginning target vector ignoring preceding white-spaces ends  -  Match pattern string end target vector trim_ends  -  Match pattern string end target vector ignoring leading white-spaces exact  -  Match pattern string exactly (.e., match equal strings) trim_exact  -  Match pattern string exactly (.e., match equal strings) ignoring surrounding white-spaces regex  -  Match regex pattern replace_all - Replace everything (entire column) new codes. replace_empty - Code records (.e., rows) existing codes empty (.e., empty string, NA, empty list) append_to_existing - Merge existing codes appending new ones end prepend_to_existing - Merge existing codes prepending new ones front","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/detect_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Codes strings (e.g., organizational names) based on certain patterns — detect_patterns","text":"","code":"detect_patterns(   x,   patterns,   patterns_col = 1,   patterns_codes_col = 2,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_codes = NULL,   output_codes_col_name = \"{col_name_}coded\",   codes_omitted_rows_value = NULL,   no_match_code = NULL,   merge_existing_codes = \"replace_all\",   return_only_codes = FALSE,   return_only_first_detected_code = FALSE,   return_merge_codes_description = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/detect_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Codes strings (e.g., organizational names) based on certain patterns — detect_patterns","text":"x Vector table detect . patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns table specifies column use. Default 1. patterns_codes_col patterns table column use codes column. Default 2. patterns_type Specifies kind(s) patterns. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column patterns table can specify types patterns pattern. set patterns.type ignored. Default NULL. patterns_codes provided use codes. length patterns. Default NULL. output_codes_col_name provided use name codes column (new exist one update) results. codes_omitted_rows_value rows set. Use value fill omitted rows. update existing codes column Default NULL means use initial codes values omitted rows. codes col update omited rows filled NA. no_match_code provided code records get match . merge_existing_codes Whether merge newly detected codes existing. Options : return_only_codes toggled just return codes vector. return_only_first_detected_code TRUE return codes first detected pattern. FALSE return list matched codes. Default TRUE. (Currently affect performance) return_merge_codes_description Return description choices merge_existing_codes paramenter. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/detect_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Codes strings (e.g., organizational names) based on certain patterns — detect_patterns","text":"updated x table codes column just codes return_only_codes set.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/escape_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Escapes special for regex characters — escape_regex","title":"Escapes special for regex characters — escape_regex","text":"Escapes special regex characters","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/escape_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Escapes special for regex characters — escape_regex","text":"","code":"escape_regex(string)"},{"path":"https://stasvlasov.github.io/nstandr/reference/escape_regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Escapes special for regex characters — escape_regex","text":"string character vector","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/escape_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Escapes special for regex characters — escape_regex","text":"character vector special regex characters escaped","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/escape_regex_for_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Escapes special for different types of pattern — escape_regex_for_type","title":"Escapes special for different types of pattern — escape_regex_for_type","text":"Escapes special different types pattern fixed  -  Match pattern string within target vector begins  -  Match pattern string beggining target vector trim_begins  -  Match pattern string beginning target vector ignoring preceding white-spaces ends  -  Match pattern string end target vector trim_ends  -  Match pattern string end target vector ignoring leading white-spaces exact  -  Match pattern string exactly (.e., match equal strings) trim_exact  -  Match pattern string exactly (.e., match equal strings) ignoring surrounding white-spaces regex  -  Match regex pattern","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/escape_regex_for_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Escapes special for different types of pattern — escape_regex_for_type","text":"","code":"escape_regex_for_type(   string,   type,   escape_fixed = FALSE,   return_docs = FALSE,   return_choices = FALSE )"},{"path":"https://stasvlasov.github.io/nstandr/reference/escape_regex_for_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Escapes special for different types of pattern — escape_regex_for_type","text":"string character vector (patterns) type characters patterns 'escaped' proper matching. options : escape_fixed Whether escape string 'fixed' 'exact' types just trimmed string \"trim_exact\". Default FALSE return_docs Return character vector documentation type (using roxygen2 documentations many places) return_choices Return character vector available escape types","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/escape_regex_for_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Escapes special for different types of pattern — escape_regex_for_type","text":"character vector special regex characters escaped","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/escape_regex_for_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Escapes special for regex characters conditionally — escape_regex_for_types","title":"Escapes special for regex characters conditionally — escape_regex_for_types","text":"Escapes special regex characters conditionally fixed  -  Match pattern string within target vector begins  -  Match pattern string beggining target vector trim_begins  -  Match pattern string beginning target vector ignoring preceding white-spaces ends  -  Match pattern string end target vector trim_ends  -  Match pattern string end target vector ignoring leading white-spaces exact  -  Match pattern string exactly (.e., match equal strings) trim_exact  -  Match pattern string exactly (.e., match equal strings) ignoring surrounding white-spaces regex  -  Match regex pattern","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/escape_regex_for_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Escapes special for regex characters conditionally — escape_regex_for_types","text":"","code":"escape_regex_for_types(patterns, types, escape_fixed = FALSE)"},{"path":"https://stasvlasov.github.io/nstandr/reference/escape_regex_for_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Escapes special for regex characters conditionally — escape_regex_for_types","text":"patterns character vector types character vector length strings instructions whether escape regex characters. Options : escape_fixed Whether escape strings 'fixed' 'exact' types case types (length(unique(types)) == 1). \"trim_exact\" types get trimed escaped. Otherwise types heterogenious","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/escape_regex_for_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Escapes special for regex characters conditionally — escape_regex_for_types","text":"string special regex characters escaped","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/get_dots.html","id":null,"dir":"Reference","previous_headings":"","what":"Provides access to arguments of nested functions. Sort of an alterative mechanism to passing ... arguments but with more features. — get_dots","title":"Provides access to arguments of nested functions. Sort of an alterative mechanism to passing ... arguments but with more features. — get_dots","text":"Provides access higher level call's arguments (including ... dots arguments) without explicitly passing calling stack allows updating default values explicitly set throughout calling stack (.e., lower calls take prevalence).","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/get_dots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provides access to arguments of nested functions. Sort of an alterative mechanism to passing ... arguments but with more features. — get_dots","text":"","code":"get_dots(   function_or_arg_list = NULL,   select_args = NULL,   search_calls_with_formals = \"...\",   search_calls_of_env = NULL,   search_calls_regexp = NULL,   search_depth = 1L,   search_up_to_call = NULL,   skip_checks_for_parent_call = TRUE,   eval_default_args = FALSE,   return_unlisted_if_single_arg = TRUE )"},{"path":"https://stasvlasov.github.io/nstandr/reference/get_dots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provides access to arguments of nested functions. Sort of an alterative mechanism to passing ... arguments but with more features. — get_dots","text":"function_or_arg_list end function meant accept dots arguments (default arguments accessed formals(function_or_arg_list)) just explicit list default dots arguments searched calling stack updated set explicitly higher calls. set NULL use formals parent call (assessed sys.function(-1L)). select_args arguments select function_or_arg_list. Ether character numeric vector. search_calls_with_formals Formals (parameters, arguments) present upper call continue looking call stack updates dots arguments. search_calls_of_env Environment/package name (character string) function upper calls belong continue looking call stack updates dots arguments. search_calls_regexp Regular expression function name upper calls matched continue looking call stack updates dots arguments. search_depth Number frames (aka environments) calling stack look arguments. search_up_to_call name call continue looking call stack updates dots arguments. skip_checks_for_parent_call Whether skip checking search_calls_with_formals search_calls_of_env search_calls_regexp eval_default_args Whether evaluate default arguments. Default evaluate (FALSE) assuming argument simple values (.e., evaluates ) return_unlisted_if_single_arg Toggle wether unlist returning single argument. Default TRUE","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/get_dots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provides access to arguments of nested functions. Sort of an alterative mechanism to passing ... arguments but with more features. — get_dots","text":"List updated dots arguments","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/get_dots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provides access to arguments of nested functions. Sort of an alterative mechanism to passing ... arguments but with more features. — get_dots","text":"","code":"# Make get_dots available for following examples get_dots <- nstandr:::get_dots # Basic usage util <- function(foo = 0, bar = 0) {     # get dots and bind updated arguments into environment     dots <- get_dots()     for (v in names(dots)) assign(v, dots[[v]])     # util just reports it arguments     message(\"foo: \", foo, \", bar: \", bar) }  util() #> foo: 0, bar: 0 #> foo: 0, bar: 0  main <- function (...) {     util()     util(foo = 1)      util(bar = 1) }  main(foo = 2, bar = 2) #> foo: 2, bar: 2 #> foo: 1, bar: 2 #> foo: 2, bar: 1 #> foo: 2, bar: 2 #> foo: 1, bar: 2  # THIS WORKS NOW! #> foo: 2, bar: 1  # THIS WORKS NOW!  # Usage in nested calls util <- function(foo = 0, bar = 0) {     # get dots and bind updated arguments into environment     dots <- get_dots(search_depth = 3L)     for (v in names(dots)) assign(v, dots[[v]])     # util just reports it arguments     message(\"foo: \", foo, \", bar: \", bar) }  main <- function (...) {     util()     sub_main(foo = 1) }  sub_main <- function (...) {     util()     sub_sub_main(bar = 2) }  sub_sub_main <- function (...) {     util() }  main() #> foo: 0, bar: 0 #> foo: 1, bar: 0 #> foo: 1, bar: 2 #> foo: 0, bar: 0 #> foo: 1, bar: 0 #> foo: 0, bar: 2"},{"path":"https://stasvlasov.github.io/nstandr/reference/get_standardize_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets standardize_options at point with consistent updates up through calling stack. — get_standardize_options","title":"Gets standardize_options at point with consistent updates up through calling stack. — get_standardize_options","text":"Limited max stack 3 calls calls include least data ... formals (nstandr functions specific) .GlobalEnv standardize call.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/get_standardize_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets standardize_options at point with consistent updates up through calling stack. — get_standardize_options","text":"","code":"get_standardize_options()"},{"path":"https://stasvlasov.github.io/nstandr/reference/get_standardize_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets standardize_options at point with consistent updates up through calling stack. — get_standardize_options","text":"Returns list updated arguments specified standardize_options function","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/get_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a target vector to standardize. — get_target","title":"Gets a target vector to standardize. — get_target","text":"Gets target vector standardize.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/get_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets a target vector to standardize. — get_target","text":"","code":"get_target(x, return_null_for_new_col = FALSE, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/get_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets a target vector to standardize. — get_target","text":"x Input data. Can vector, data.frame data.table return_null_for_new_col Return NULL target yet created (inset) ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/get_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets a target vector to standardize. — get_target","text":"vector. Factors imput data converted string.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/get_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets vector by column and defactor if needed. Optionaly one can\nprovide a fallback_value which will be returned if col is not\nspecified. — get_vector","title":"Gets vector by column and defactor if needed. Optionaly one can\nprovide a fallback_value which will be returned if col is not\nspecified. — get_vector","text":"Gets vector column defactor needed. Optionaly one can provide fallback_value returned col specified.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/get_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets vector by column and defactor if needed. Optionaly one can\nprovide a fallback_value which will be returned if col is not\nspecified. — get_vector","text":"","code":"get_vector(   x,   col,   rows = NULL,   choices = NULL,   fallback_value = NULL,   fallback_value_supersedes = FALSE,   fallback_value_any_missing = TRUE,   fallback_value_ensure_length = TRUE,   check_x_col_rows = TRUE,   which_call_to_report = -1L )"},{"path":"https://stasvlasov.github.io/nstandr/reference/get_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets vector by column and defactor if needed. Optionaly one can\nprovide a fallback_value which will be returned if col is not\nspecified. — get_vector","text":"x Input data. Can vector, data.frame data.table col Column interest input data x. vector like work . Ignored input x atomic vector. rows Rows interest choices Optional set choices return value subset . check NULL. fallback_value col NULL return value (see fallback_value_supersedes argument). Also check character vector lenght x. length 1 replicate match x's length. fallback_value_supersedes bolean toggle. set col ignored fallback_value provided. Otherwise (default) col provided fallback_value ignored. fallback_value_any_missing Toggle check missing values allowed fallback_value fallback_value_ensure_length Toggle fallback_value make length x check_x_col_rows Toggle wheather use check_x, check_col, check_rows? which_call_to_report call report argument checks fail.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/get_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets vector by column and defactor if needed. Optionaly one can\nprovide a fallback_value which will be returned if col is not\nspecified. — get_vector","text":"vector. Factors imput data converted string.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/inset_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Insets target vector back to input object (x) — inset_target","title":"Insets target vector back to input object (x) — inset_target","text":"Insets target vector back input object (x)","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/inset_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insets target vector back to input object (x) — inset_target","text":"","code":"inset_target(   vector,   x,   omitted_rows_value_for_new_col = NULL,   allow_na_in_vector = TRUE,   which_call_to_report = -5L,   return_only_target_col = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/inset_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insets target vector back to input object (x) — inset_target","text":"vector Character vector inset x object x Data standardize. Character vector data.frame data.table omitted_rows_value_for_new_col Alternative value omitted_rows_value use case create new column x. example, use insetting codes avoid default omitted_rows_value use initial col case codes mixed input values allow_na_in_vector Whether allow NA inset vector which_call_to_report System call number (e.g., -2L) include report arguments checks fails return_only_target_col toggled TRUE return vector inset (output_placement argument ignored) ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/inset_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insets target vector back to input object (x) — inset_target","text":"Data.table character vector","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/is_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if string has something to print — is_empty","title":"Checks if string has something to print — is_empty","text":"Checks string something print","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/is_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if string has something to print — is_empty","text":"","code":"is_empty(x)"},{"path":"https://stasvlasov.github.io/nstandr/reference/is_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if string has something to print — is_empty","text":"x string test","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/is_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks if string has something to print — is_empty","text":"boolean","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_condense.html","id":null,"dir":"Reference","previous_headings":"","what":"Condensing names — magerman_condense","title":"Condensing names — magerman_condense","text":"simple illustration procedure :","code":"3 COM -> 3COM"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_condense.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Condensing names — magerman_condense","text":"","code":"magerman_condense(   x,   patterns = \"[^a-zA-Z0-9]+\",   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"regex\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_condense.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Condensing names — magerman_condense","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_condense.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Condensing names — magerman_condense","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_characters.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect candidates for characters that need to be cleaned — magerman_detect_characters","title":"Detect candidates for characters that need to be cleaned — magerman_detect_characters","text":"function can used detect candidates characters need cleaned based patterns (see table details).","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_characters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect candidates for characters that need to be cleaned — magerman_detect_characters","text":"","code":"magerman_detect_characters(   x,   patterns = magerman_patterns_detect_characters,   patterns_col = 1,   patterns_codes_col = 2,   patterns_type = \"regex\",   patterns_type_col = NULL,   patterns_codes = NULL,   output_codes_col_name = \"characters_cleaning_candidates\",   codes_omitted_rows_value = NULL,   no_match_code = NULL,   merge_existing_codes = \"replace_all\",   return_only_codes = FALSE,   return_only_first_detected_code = FALSE,   return_merge_codes_description = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_characters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect candidates for characters that need to be cleaned — magerman_detect_characters","text":"x Vector table detect . patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns table specifies column use. Default 1. patterns_codes_col patterns table column use codes column. Default 2. patterns_type Specifies kind(s) patterns. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column patterns table can specify types patterns pattern. set patterns.type ignored. Default NULL. patterns_codes provided use codes. length patterns. Default NULL. output_codes_col_name provided use name codes column (new exist one update) results. codes_omitted_rows_value rows set. Use value fill omitted rows. update existing codes column Default NULL means use initial codes values omitted rows. codes col update omited rows filled NA. no_match_code provided code records get match . merge_existing_codes Whether merge newly detected codes existing. Options : return_only_codes toggled just return codes vector. return_only_first_detected_code TRUE return codes first detected pattern. FALSE return list matched codes. Default TRUE. (Currently affect performance) return_merge_codes_description Return description choices merge_existing_codes paramenter. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_characters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect candidates for characters that need to be cleaned — magerman_detect_characters","text":"updated x table codes column just codes return_only_codes set.","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_comma_period_irregularities.html","id":null,"dir":"Reference","previous_headings":"","what":"Detects comma period irregularities — magerman_detect_comma_period_irregularities","title":"Detects comma period irregularities — magerman_detect_comma_period_irregularities","text":"procedure applies original method detection comma period irregularities.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_comma_period_irregularities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detects comma period irregularities — magerman_detect_comma_period_irregularities","text":"","code":"magerman_detect_comma_period_irregularities(   x,   patterns = magerman_patterns_detect_comma_and_period_irregularities,   patterns_col = 1,   patterns_codes_col = 2,   patterns_type = \"regex\",   patterns_type_col = NULL,   patterns_codes = NULL,   output_codes_col_name = \"comma_period_irregularities_candidates\",   codes_omitted_rows_value = NULL,   no_match_code = NULL,   merge_existing_codes = \"replace_all\",   return_only_codes = FALSE,   return_only_first_detected_code = FALSE,   return_merge_codes_description = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_comma_period_irregularities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detects comma period irregularities — magerman_detect_comma_period_irregularities","text":"x Vector table detect . patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns table specifies column use. Default 1. patterns_codes_col patterns table column use codes column. Default 2. patterns_type Specifies kind(s) patterns. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column patterns table can specify types patterns pattern. set patterns.type ignored. Default NULL. patterns_codes provided use codes. length patterns. Default NULL. output_codes_col_name provided use name codes column (new exist one update) results. codes_omitted_rows_value rows set. Use value fill omitted rows. update existing codes column Default NULL means use initial codes values omitted rows. codes col update omited rows filled NA. no_match_code provided code records get match . merge_existing_codes Whether merge newly detected codes existing. Options : return_only_codes toggled just return codes vector. return_only_first_detected_code TRUE return codes first detected pattern. FALSE return list matched codes. Default TRUE. (Currently affect performance) return_merge_codes_description Return description choices merge_existing_codes paramenter. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_comma_period_irregularities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detects comma period irregularities — magerman_detect_comma_period_irregularities","text":"updated x table codes column just codes return_only_codes set.","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_legal_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect legal form — magerman_detect_legal_form","title":"Detect legal form — magerman_detect_legal_form","text":"Detect legal form","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_legal_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect legal form — magerman_detect_legal_form","text":"","code":"magerman_detect_legal_form(x, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_legal_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect legal form — magerman_detect_legal_form","text":"x table ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_legal_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect legal form — magerman_detect_legal_form","text":"standardized names table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_legal_form_beginning.html","id":null,"dir":"Reference","previous_headings":"","what":"Detects legal form at the beginning of a name — magerman_detect_legal_form_beginning","title":"Detects legal form at the beginning of a name — magerman_detect_legal_form_beginning","text":"Detects legal form beginning name","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_legal_form_beginning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detects legal form at the beginning of a name — magerman_detect_legal_form_beginning","text":"","code":"magerman_detect_legal_form_beginning(   x,   patterns = data.table(pattern = \"KABUSHIKI KAISHA\", legal.form = \"KAISHA\"),   patterns_col = 1,   patterns_codes_col = 2,   patterns_type = \"begins\",   patterns_type_col = NULL,   patterns_codes = NULL,   output_codes_col_name = \"{col_name_}legal_form\",   codes_omitted_rows_value = NULL,   no_match_code = NULL,   merge_existing_codes = \"replace_empty\",   return_only_codes = FALSE,   return_only_first_detected_code = TRUE,   return_merge_codes_description = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_legal_form_beginning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detects legal form at the beginning of a name — magerman_detect_legal_form_beginning","text":"x Vector table detect . patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns table specifies column use. Default 1. patterns_codes_col patterns table column use codes column. Default 2. patterns_type Specifies kind(s) patterns. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column patterns table can specify types patterns pattern. set patterns.type ignored. Default NULL. patterns_codes provided use codes. length patterns. Default NULL. output_codes_col_name provided use name codes column (new exist one update) results. codes_omitted_rows_value rows set. Use value fill omitted rows. update existing codes column Default NULL means use initial codes values omitted rows. codes col update omited rows filled NA. no_match_code provided code records get match . merge_existing_codes Whether merge newly detected codes existing. Options : return_only_codes toggled just return codes vector. return_only_first_detected_code TRUE return codes first detected pattern. FALSE return list matched codes. Default TRUE. (Currently affect performance) return_merge_codes_description Return description choices merge_existing_codes paramenter. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_legal_form_beginning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detects legal form at the beginning of a name — magerman_detect_legal_form_beginning","text":"updated x table codes column just codes return_only_codes set.","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_legal_form_end.html","id":null,"dir":"Reference","previous_headings":"","what":"Detects legal form at the end of a name — magerman_detect_legal_form_end","title":"Detects legal form at the end of a name — magerman_detect_legal_form_end","text":"Detects legal form end name","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_legal_form_end.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detects legal form at the end of a name — magerman_detect_legal_form_end","text":"","code":"magerman_detect_legal_form_end(   x,   patterns = magerman_patterns_legal_form_end,   patterns_col = 1,   patterns_codes_col = 3,   patterns_type = \"ends\",   patterns_type_col = NULL,   patterns_codes = NULL,   output_codes_col_name = \"{col_name_}legal_form\",   codes_omitted_rows_value = NULL,   no_match_code = NULL,   merge_existing_codes = \"replace_empty\",   return_only_codes = FALSE,   return_only_first_detected_code = TRUE,   return_merge_codes_description = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_legal_form_end.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detects legal form at the end of a name — magerman_detect_legal_form_end","text":"x Vector table detect . patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns table specifies column use. Default 1. patterns_codes_col patterns table column use codes column. Default 2. patterns_type Specifies kind(s) patterns. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column patterns table can specify types patterns pattern. set patterns.type ignored. Default NULL. patterns_codes provided use codes. length patterns. Default NULL. output_codes_col_name provided use name codes column (new exist one update) results. codes_omitted_rows_value rows set. Use value fill omitted rows. update existing codes column Default NULL means use initial codes values omitted rows. codes col update omited rows filled NA. no_match_code provided code records get match . merge_existing_codes Whether merge newly detected codes existing. Options : return_only_codes toggled just return codes vector. return_only_first_detected_code TRUE return codes first detected pattern. FALSE return list matched codes. Default TRUE. (Currently affect performance) return_merge_codes_description Return description choices merge_existing_codes paramenter. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_legal_form_end.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detects legal form at the end of a name — magerman_detect_legal_form_end","text":"updated x table codes column just codes return_only_codes set.","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_legal_form_middle.html","id":null,"dir":"Reference","previous_headings":"","what":"Detects legal form in the middle of a name — magerman_detect_legal_form_middle","title":"Detects legal form in the middle of a name — magerman_detect_legal_form_middle","text":"Detects legal form middle name","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_legal_form_middle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detects legal form in the middle of a name — magerman_detect_legal_form_middle","text":"","code":"magerman_detect_legal_form_middle(   x,   patterns = magerman_patterns_legal_form_middle,   patterns_col = 1,   patterns_codes_col = 3,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_codes = NULL,   output_codes_col_name = \"{col_name_}legal_form\",   codes_omitted_rows_value = NULL,   no_match_code = NULL,   merge_existing_codes = \"replace_empty\",   return_only_codes = FALSE,   return_only_first_detected_code = TRUE,   return_merge_codes_description = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_legal_form_middle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detects legal form in the middle of a name — magerman_detect_legal_form_middle","text":"x Vector table detect . patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns table specifies column use. Default 1. patterns_codes_col patterns table column use codes column. Default 2. patterns_type Specifies kind(s) patterns. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column patterns table can specify types patterns pattern. set patterns.type ignored. Default NULL. patterns_codes provided use codes. length patterns. Default NULL. output_codes_col_name provided use name codes column (new exist one update) results. codes_omitted_rows_value rows set. Use value fill omitted rows. update existing codes column Default NULL means use initial codes values omitted rows. codes col update omited rows filled NA. no_match_code provided code records get match . merge_existing_codes Whether merge newly detected codes existing. Options : return_only_codes toggled just return codes vector. return_only_first_detected_code TRUE return codes first detected pattern. FALSE return list matched codes. Default TRUE. (Currently affect performance) return_merge_codes_description Return description choices merge_existing_codes paramenter. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_legal_form_middle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detects legal form in the middle of a name — magerman_detect_legal_form_middle","text":"updated x table codes column just codes return_only_codes set.","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_umlaut.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect umlauts — magerman_detect_umlaut","title":"Detect umlauts — magerman_detect_umlaut","text":"simple illustration procedure :","code":"GLÜHLAMPEN -> GLUEHLAMPEN"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_umlaut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect umlauts — magerman_detect_umlaut","text":"","code":"magerman_detect_umlaut(   x,   patterns = magerman_patterns_umlaut,   patterns_col = 1,   patterns_codes_col = 2,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_codes = TRUE,   output_codes_col_name = \"{col_name_}has_umlaut\",   codes_omitted_rows_value = NULL,   no_match_code = FALSE,   merge_existing_codes = \"replace_all\",   return_only_codes = FALSE,   return_only_first_detected_code = TRUE,   return_merge_codes_description = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_umlaut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect umlauts — magerman_detect_umlaut","text":"x Vector table detect . patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns table specifies column use. Default 1. patterns_codes_col patterns table column use codes column. Default 2. patterns_type Specifies kind(s) patterns. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column patterns table can specify types patterns pattern. set patterns.type ignored. Default NULL. patterns_codes provided use codes. length patterns. Default NULL. output_codes_col_name provided use name codes column (new exist one update) results. codes_omitted_rows_value rows set. Use value fill omitted rows. update existing codes column Default NULL means use initial codes values omitted rows. codes col update omited rows filled NA. no_match_code provided code records get match . merge_existing_codes Whether merge newly detected codes existing. Options : return_only_codes toggled just return codes vector. return_only_first_detected_code TRUE return codes first detected pattern. FALSE return list matched codes. Default TRUE. (Currently affect performance) return_merge_codes_description Return description choices merge_existing_codes paramenter. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_detect_umlaut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect umlauts — magerman_detect_umlaut","text":"updated x table codes column just codes return_only_codes set.","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_common_words.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove common words — magerman_remove_common_words","title":"Remove common words — magerman_remove_common_words","text":"simple illustration procedure :","code":"3COM CORPORATION -> 3COM"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_common_words.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove common words — magerman_remove_common_words","text":"","code":"magerman_remove_common_words(x, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_common_words.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove common words — magerman_remove_common_words","text":"x table ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_common_words.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove common words — magerman_remove_common_words","text":"standardized names table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_common_words_anywhere.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes common words anywhere in a name — magerman_remove_common_words_anywhere","title":"Removes common words anywhere in a name — magerman_remove_common_words_anywhere","text":"simple illustration procedure :","code":"AMIC COMPANY -> AMIC"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_common_words_anywhere.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes common words anywhere in a name — magerman_remove_common_words_anywhere","text":"","code":"magerman_remove_common_words_anywhere(   x,   patterns = magerman_patterns_common_words_anywhere,   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_common_words_anywhere.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes common words anywhere in a name — magerman_remove_common_words_anywhere","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_common_words_anywhere.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes common words anywhere in a name — magerman_remove_common_words_anywhere","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_common_words_at_the_beginning.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes common words at the beginning of a name — magerman_remove_common_words_at_the_beginning","title":"Removes common words at the beginning of a name — magerman_remove_common_words_at_the_beginning","text":"simple illustration procedure :","code":"SOCIETE NOVATEC -> NOVATEC"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_common_words_at_the_beginning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes common words at the beginning of a name — magerman_remove_common_words_at_the_beginning","text":"","code":"magerman_remove_common_words_at_the_beginning(   x,   patterns = magerman_patterns_common_words_at_the_beginning,   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"begins\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_common_words_at_the_beginning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes common words at the beginning of a name — magerman_remove_common_words_at_the_beginning","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_common_words_at_the_beginning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes common words at the beginning of a name — magerman_remove_common_words_at_the_beginning","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_common_words_at_the_end.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes common words at the end of a name — magerman_remove_common_words_at_the_end","title":"Removes common words at the end of a name — magerman_remove_common_words_at_the_end","text":"simple illustration procedure :","code":"3COM CORPORATION -> 3COM"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_common_words_at_the_end.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes common words at the end of a name — magerman_remove_common_words_at_the_end","text":"","code":"magerman_remove_common_words_at_the_end(   x,   patterns = magerman_patterns_common_words_at_the_end,   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"ends\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_common_words_at_the_end.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes common words at the end of a name — magerman_remove_common_words_at_the_end","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_common_words_at_the_end.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes common words at the end of a name — magerman_remove_common_words_at_the_end","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_double_quotation_marks_beginning_end.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes double quotation irregularities — magerman_remove_double_quotation_marks_beginning_end","title":"Removes double quotation irregularities — magerman_remove_double_quotation_marks_beginning_end","text":"simple illustration procedure :","code":"\"\"IBM Co.\"\" -> IBM Co."},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_double_quotation_marks_beginning_end.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes double quotation irregularities — magerman_remove_double_quotation_marks_beginning_end","text":"","code":"magerman_remove_double_quotation_marks_beginning_end(   x,   patterns = \"^\\\"\\\"((?:(?!\\\"\\\").)*)\\\"\\\"$\",   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"regex\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = \"$1\",   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_double_quotation_marks_beginning_end.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes double quotation irregularities — magerman_remove_double_quotation_marks_beginning_end","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_double_quotation_marks_beginning_end.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes double quotation irregularities — magerman_remove_double_quotation_marks_beginning_end","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_double_quotation_marks_irregularities.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes double quotation irregularities — magerman_remove_double_quotation_marks_irregularities","title":"Removes double quotation irregularities — magerman_remove_double_quotation_marks_irregularities","text":"simple illustration procedure :","code":"\"\"IBM\" -> \"IBM\""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_double_quotation_marks_irregularities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes double quotation irregularities — magerman_remove_double_quotation_marks_irregularities","text":"","code":"magerman_remove_double_quotation_marks_irregularities(   x,   patterns = c(\"^\\\"\\\"\\\\s(.*)\\\"$\", \"^\\\"(.*)\\\\s\\\"\\\"$\"),   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"regex\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = c(\"\\\"\\\"$1\\\"\", \"\\\"$1\\\"\\\"\"),   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_double_quotation_marks_irregularities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes double quotation irregularities — magerman_remove_double_quotation_marks_irregularities","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_double_quotation_marks_irregularities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes double quotation irregularities — magerman_remove_double_quotation_marks_irregularities","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_double_spaces.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes double spaces — magerman_remove_double_spaces","title":"Removes double spaces — magerman_remove_double_spaces","text":"simple illustration procedure :","code":"'  ' -> ' '"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_double_spaces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes double spaces — magerman_remove_double_spaces","text":"","code":"magerman_remove_double_spaces(   x,   patterns = \"\\\\s+\",   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"regex\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = \" \",   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_double_spaces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes double spaces — magerman_remove_double_spaces","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_double_spaces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes double spaces — magerman_remove_double_spaces","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_html_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes html codes — magerman_remove_html_codes","title":"Removes html codes — magerman_remove_html_codes","text":"Original authors search html tags found <BR>. general html tags considered. procedure reproducibility . simple illustration procedure :","code":"`<BR>` -> ' '"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_html_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes html codes — magerman_remove_html_codes","text":"","code":"magerman_remove_html_codes(   x,   patterns = \"<BR>\",   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = \" \",   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_html_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes html codes — magerman_remove_html_codes","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_html_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes html codes — magerman_remove_html_codes","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_legal_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes legal form — magerman_remove_legal_form","title":"Removes legal form — magerman_remove_legal_form","text":"simple illustration procedure :","code":"IBM INC. -> IBM"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_legal_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes legal form — magerman_remove_legal_form","text":"","code":"magerman_remove_legal_form(x, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_legal_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes legal form — magerman_remove_legal_form","text":"x table ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_legal_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes legal form — magerman_remove_legal_form","text":"standardized names table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_legal_form_and_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes legal form — magerman_remove_legal_form_and_clean","title":"Removes legal form — magerman_remove_legal_form_and_clean","text":"simple illustration procedure :","code":"IBM INC. -> IBM"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_legal_form_and_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes legal form — magerman_remove_legal_form_and_clean","text":"","code":"magerman_remove_legal_form_and_clean(x, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_legal_form_and_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes legal form — magerman_remove_legal_form_and_clean","text":"x table ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_legal_form_and_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes legal form — magerman_remove_legal_form_and_clean","text":"standardized names table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_non_alphanumeric_at_the_beginning.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes non alphanumeric characters at the beginning of a name — magerman_remove_non_alphanumeric_at_the_beginning","title":"Removes non alphanumeric characters at the beginning of a name — magerman_remove_non_alphanumeric_at_the_beginning","text":"simple illustration procedure :","code":".IBM Co. -> IBM Co."},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_non_alphanumeric_at_the_beginning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes non alphanumeric characters at the beginning of a name — magerman_remove_non_alphanumeric_at_the_beginning","text":"","code":"magerman_remove_non_alphanumeric_at_the_beginning(   x,   patterns = \"^[^A-Z0-9\\\"@('#!*/]+\",   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"regex\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_non_alphanumeric_at_the_beginning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes non alphanumeric characters at the beginning of a name — magerman_remove_non_alphanumeric_at_the_beginning","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_non_alphanumeric_at_the_beginning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes non alphanumeric characters at the beginning of a name — magerman_remove_non_alphanumeric_at_the_beginning","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_non_alphanumeric_at_the_end.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes non alphanumeric characters at the end of a name — magerman_remove_non_alphanumeric_at_the_end","title":"Removes non alphanumeric characters at the end of a name — magerman_remove_non_alphanumeric_at_the_end","text":"simple illustration procedure :","code":"IBM Co., DITE : -> IBM Co."},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_non_alphanumeric_at_the_end.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes non alphanumeric characters at the end of a name — magerman_remove_non_alphanumeric_at_the_end","text":"","code":"magerman_remove_non_alphanumeric_at_the_end(   x,   patterns = c(\" DITE[:,]$\", \"DITE :$\", \"[^A-Z0-9.'\\\")]+$\"),   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"regex\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_non_alphanumeric_at_the_end.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes non alphanumeric characters at the end of a name — magerman_remove_non_alphanumeric_at_the_end","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_non_alphanumeric_at_the_end.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes non alphanumeric characters at the end of a name — magerman_remove_non_alphanumeric_at_the_end","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_special_characters.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes special characters — magerman_remove_special_characters","title":"Removes special characters — magerman_remove_special_characters","text":"Removes everything : -Z; 0-9; \"-\"; \"+\"; \"'\"; \"\"\"; \"#\"; ##' \"*\";\"@\"; \"!\"; \"?\"; \"/\"; \"&\"; \"(\"; \")\"; \":\"; \";\"; \",\"; \".\"; \" \" simple illustration procedure :","code":"'©%^_' -> ' '"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_special_characters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes special characters — magerman_remove_special_characters","text":"","code":"magerman_remove_special_characters(   x,   patterns = \"[^A-Z0-9\\\\-+'\\\"#*;@!?/&():;,. ]\",   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"regex\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_special_characters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes special characters — magerman_remove_special_characters","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_remove_special_characters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes special characters — magerman_remove_special_characters","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_accented_characters.html","id":null,"dir":"Reference","previous_headings":"","what":"Replaces accented characters — magerman_replace_accented_characters","title":"Replaces accented characters — magerman_replace_accented_characters","text":"original procedure based patterns identified original PATSTAT data. .e. intended reproducibility purposes. Use magerman_detect_characters identify similar patterns data. simple illustration procedure :","code":"Æ -> AE"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_accented_characters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replaces accented characters — magerman_replace_accented_characters","text":"","code":"magerman_replace_accented_characters(   x,   patterns = magerman_patterns_accented_characters,   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_accented_characters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replaces accented characters — magerman_replace_accented_characters","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_accented_characters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replaces accented characters — magerman_replace_accented_characters","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_comma_period_irregularities.html","id":null,"dir":"Reference","previous_headings":"","what":"Replaces comma period irregularities — magerman_replace_comma_period_irregularities","title":"Replaces comma period irregularities — magerman_replace_comma_period_irregularities","text":"simple illustration procedure :","code":"' CO.,INC.' -> ' CO., INC.'"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_comma_period_irregularities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replaces comma period irregularities — magerman_replace_comma_period_irregularities","text":"","code":"magerman_replace_comma_period_irregularities(   x,   patterns = data.table::rbindlist(list(magerman_patterns_comma_followed_by_space,     magerman_patterns_comma_preceded_by_space, magerman_patterns_periods)),   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"fixed\",   patterns_type_col = 3,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_comma_period_irregularities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replaces comma period irregularities — magerman_replace_comma_period_irregularities","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_comma_period_irregularities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replaces comma period irregularities — magerman_replace_comma_period_irregularities","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_comma_period_irregularities_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Replaces comma and period irregularities — magerman_replace_comma_period_irregularities_all","title":"Replaces comma and period irregularities — magerman_replace_comma_period_irregularities_all","text":"simple illustration procedure :","code":",IBM , Co.. -> IBM, Co."},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_comma_period_irregularities_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replaces comma and period irregularities — magerman_replace_comma_period_irregularities_all","text":"","code":"magerman_replace_comma_period_irregularities_all(   x,   patterns = data.frame(matrix(c(\",([^\\\\s])\", \", $1\", \"\\\\s,\", \",\",     \"([^A-Za-z0-9])\\\\.\", \"$1\"), byrow = TRUE, ncol = 2)),   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"regex\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_comma_period_irregularities_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replaces comma and period irregularities — magerman_replace_comma_period_irregularities_all","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_comma_period_irregularities_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replaces comma and period irregularities — magerman_replace_comma_period_irregularities_all","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_legal_form_beginning.html","id":null,"dir":"Reference","previous_headings":"","what":"Replaces legal form at the beginning of a name — magerman_replace_legal_form_beginning","title":"Replaces legal form at the beginning of a name — magerman_replace_legal_form_beginning","text":"simple illustration procedure :","code":"IBM KABUSHIKI KAISHA -> IBM"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_legal_form_beginning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replaces legal form at the beginning of a name — magerman_replace_legal_form_beginning","text":"","code":"magerman_replace_legal_form_beginning(   x,   patterns = \"KABUSHIKI KAISHA\",   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"begins\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_legal_form_beginning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replaces legal form at the beginning of a name — magerman_replace_legal_form_beginning","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_legal_form_beginning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replaces legal form at the beginning of a name — magerman_replace_legal_form_beginning","text":"standardized names table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_legal_form_end.html","id":null,"dir":"Reference","previous_headings":"","what":"Replaces legal form at the end of a name — magerman_replace_legal_form_end","title":"Replaces legal form at the end of a name — magerman_replace_legal_form_end","text":"simple illustration procedure :","code":"IBM GMBH & CO., AG -> IBM & COMPANY"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_legal_form_end.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replaces legal form at the end of a name — magerman_replace_legal_form_end","text":"","code":"magerman_replace_legal_form_end(   x,   patterns = magerman_patterns_legal_form_end,   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"ends\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_legal_form_end.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replaces legal form at the end of a name — magerman_replace_legal_form_end","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_legal_form_end.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replaces legal form at the end of a name — magerman_replace_legal_form_end","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_legal_form_middle.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace legal form in the middle of a name — magerman_replace_legal_form_middle","title":"Replace legal form in the middle of a name — magerman_replace_legal_form_middle","text":"simple illustration procedure :","code":"IBM GMBH & CO.K.G. -> IBM & COMPANY"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_legal_form_middle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace legal form in the middle of a name — magerman_replace_legal_form_middle","text":"","code":"magerman_replace_legal_form_middle(   x,   patterns = magerman_patterns_legal_form_middle,   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_legal_form_middle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace legal form in the middle of a name — magerman_replace_legal_form_middle","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_legal_form_middle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace legal form in the middle of a name — magerman_replace_legal_form_middle","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_proprietary_characters.html","id":null,"dir":"Reference","previous_headings":"","what":"Replaces proprietary characters — magerman_replace_proprietary_characters","title":"Replaces proprietary characters — magerman_replace_proprietary_characters","text":"original procedure based patterns identified original PATSTAT data. .e. intended reproducibility purposes. Use magerman_detect_characters identify similar patterns data. simple illustration procedure :","code":"{UMLAUT OVER (A)} -> Ä"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_proprietary_characters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replaces proprietary characters — magerman_replace_proprietary_characters","text":"","code":"magerman_replace_proprietary_characters(   x,   patterns = magerman_patterns_proprietary_characters,   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_proprietary_characters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replaces proprietary characters — magerman_replace_proprietary_characters","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_proprietary_characters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replaces proprietary characters — magerman_replace_proprietary_characters","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_sgml_characters.html","id":null,"dir":"Reference","previous_headings":"","what":"Replaces sgml characters — magerman_replace_sgml_characters","title":"Replaces sgml characters — magerman_replace_sgml_characters","text":"original procedure based patterns identified original PATSTAT data. .e. intended reproducibility purposes. Use magerman_detect_characters identify similar patterns data. simple illustration procedure :","code":"&AMP;EXCL; -> !"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_sgml_characters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replaces sgml characters — magerman_replace_sgml_characters","text":"","code":"magerman_replace_sgml_characters(   x,   patterns = magerman_patterns_sgml_characters,   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_sgml_characters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replaces sgml characters — magerman_replace_sgml_characters","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_sgml_characters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replaces sgml characters — magerman_replace_sgml_characters","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_spelling_variation.html","id":null,"dir":"Reference","previous_headings":"","what":"Replaces spelling variation — magerman_replace_spelling_variation","title":"Replaces spelling variation — magerman_replace_spelling_variation","text":"simple illustration procedure :","code":"INTERNATIONALE -> INTERNATIONAL"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_spelling_variation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replaces spelling variation — magerman_replace_spelling_variation","text":"","code":"magerman_replace_spelling_variation(   x,   patterns = magerman_patterns_spelling_variation,   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_spelling_variation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replaces spelling variation — magerman_replace_spelling_variation","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_spelling_variation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replaces spelling variation — magerman_replace_spelling_variation","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_umlaut.html","id":null,"dir":"Reference","previous_headings":"","what":"Replaces Umlauts — magerman_replace_umlaut","title":"Replaces Umlauts — magerman_replace_umlaut","text":"simple illustration procedure :","code":"GLÜHLAMPEN -> GLUEHLAMPEN"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_umlaut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replaces Umlauts — magerman_replace_umlaut","text":"","code":"magerman_replace_umlaut(   x,   has_umlaut_col = NULL,   drop_has_umlaut_col = TRUE,   replace_accented_characters = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_umlaut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replaces Umlauts — magerman_replace_umlaut","text":"x Data has_umlaut_col Column logical values indicating weather corresponding string umlaut. Default NULL detects automatically first drop_has_umlaut_col Whether drop has_umlaut_col. Default FALSE replace_accented_characters Whether replace accented characters first. Default FALSE ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/magerman_replace_umlaut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replaces Umlauts — magerman_replace_umlaut","text":"standardized names table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/make_dot_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes dot graph edges for visualizing arrows between sequence of procedures. — make_dot_edges","title":"Makes dot graph edges for visualizing arrows between sequence of procedures. — make_dot_edges","text":"Makes dot graph edges visualizing arrows sequence procedures.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/make_dot_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes dot graph edges for visualizing arrows between sequence of procedures. — make_dot_edges","text":"","code":"make_dot_edges(procedures_list, prefix = NULL)"},{"path":"https://stasvlasov.github.io/nstandr/reference/make_dot_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes dot graph edges for visualizing arrows between sequence of procedures. — make_dot_edges","text":"procedures_list List procedures. See sandardize specify procedures list. prefix Prefix edge IDs","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/make_dot_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes dot graph edges for visualizing arrows between sequence of procedures. — make_dot_edges","text":"list dot graph edges","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/make_dot_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates graph description for visualizing list of procedures in dot format. — make_dot_graph","title":"Generates graph description for visualizing list of procedures in dot format. — make_dot_graph","text":"visualization requires dependencies installed (e.g., DiagrammeR package). can cat() returned string R console copy web tool dot visualization (e.g.http://magjac.com/graphviz-visual-editor)","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/make_dot_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates graph description for visualizing list of procedures in dot format. — make_dot_graph","text":"","code":"make_dot_graph(procedures_list, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/make_dot_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates graph description for visualizing list of procedures in dot format. — make_dot_graph","text":"procedures_list List procedures. See sandardize specify procedures list. ... Arguments passed make_dot_nodes node_prefix pefix node IDs procedures_group_bg_color Background color visuallizing groupped procedures (nested list procedures) procedures_group_title_font Font family group procedures title","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/make_dot_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates graph description for visualizing list of procedures in dot format. — make_dot_graph","text":"dot graph string","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/make_dot_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates description of dot graph nodes. — make_dot_nodes","title":"Generates description of dot graph nodes. — make_dot_nodes","text":"Generates description dot graph nodes.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/make_dot_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates description of dot graph nodes. — make_dot_nodes","text":"","code":"make_dot_nodes(   procedures_list,   node_prefix = NULL,   ...,   procedures_group_bg_color = \"#ecf0f1\",   procedures_group_title_font = \"Helvetica\" )"},{"path":"https://stasvlasov.github.io/nstandr/reference/make_dot_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates description of dot graph nodes. — make_dot_nodes","text":"procedures_list List procedures. See sandardize specify procedures list. node_prefix pefix node IDs ... Arguments passed paste_dot_node procedure Procedure's function either charater string call (optional arguments) procedure_title overwrites node's title. default title either procedure's attribute 'title' (prefixed procedure_attr_prefix) just name procedure attibute. id Node ID used refering edges (arrows) definition node_bg_color node's background color node_header_color node's header background color node_font main font family node_fix_width_font fixed font family add_example wheather add example procedure's attribure 'example' (prefixed procedure_attr_prefix) add_procedure_name wheather add procedure's name add_procedure_args wheather add optional procedure's arguments procedure_attr_prefix prefix used specify procedures' attibutes procedures_group_bg_color Background color visuallizing groupped procedures (nested list procedures) procedures_group_title_font Font family group procedures title","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/make_dot_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates description of dot graph nodes. — make_dot_nodes","text":"dot nodes string","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/nstandr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"nstandr: Name Standardization in R — nstandr-package","title":"nstandr: Name Standardization in R — nstandr-package","text":"(Organizational) Names STANDardization R. Reproduces procedures described Thoma et al. (2010), Magerman et al. (2006), Cockburn et al. (2009), Wasi & Flaaen (2015) .","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/nstandr-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nstandr: Name Standardization in R — nstandr-package","text":"(Organizational) Names STANDardization R. Reproduces procedures described Thoma et al. (2010), Magerman et al. (2006), Cockburn et al. (2009), Wasi & Flaaen (2015) .","code":""},{"path":[]},{"path":"https://stasvlasov.github.io/nstandr/reference/nstandr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"nstandr: Name Standardization in R — nstandr-package","text":"Maintainer: Stas Vlasov s.vlasov@uvt.nl","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/paste_dot_node.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes a dot node (as html table) from procedure's attributes. — paste_dot_node","title":"Makes a dot node (as html table) from procedure's attributes. — paste_dot_node","text":"Makes dot node (html table) procedure's attributes.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/paste_dot_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes a dot node (as html table) from procedure's attributes. — paste_dot_node","text":"","code":"paste_dot_node(   procedure,   id,   procedure_title = NULL,   node_bg_color = \"white\",   node_header_color = \"#bdc3c7\",   node_font = \"Helvetica\",   node_fix_width_font = \"Courier\",   add_example = TRUE,   add_procedure_name = FALSE,   add_procedure_args = FALSE,   procedure_attr_prefix = \"nstandr_procedure_\" )"},{"path":"https://stasvlasov.github.io/nstandr/reference/paste_dot_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes a dot node (as html table) from procedure's attributes. — paste_dot_node","text":"procedure Procedure's function either charater string call (optional arguments) id Node ID used refering edges (arrows) definition procedure_title overwrites node's title. default title either procedure's attribute 'title' (prefixed procedure_attr_prefix) just name procedure attibute. node_bg_color node's background color node_header_color node's header background color node_font main font family node_fix_width_font fixed font family add_example wheather add example procedure's attribure 'example' (prefixed procedure_attr_prefix) add_procedure_name wheather add procedure's name add_procedure_args wheather add optional procedure's arguments procedure_attr_prefix prefix used specify procedures' attibutes","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/paste_dot_node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes a dot node (as html table) from procedure's attributes. — paste_dot_node","text":"dot node string","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/paste_dot_node_tr_td.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes TR TD record for dot node TABLE — paste_dot_node_tr_td","title":"Makes TR TD record for dot node TABLE — paste_dot_node_tr_td","text":"Makes TR TD record dot node TABLE","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/paste_dot_node_tr_td.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes TR TD record for dot node TABLE — paste_dot_node_tr_td","text":"","code":"paste_dot_node_tr_td(str, bg_color = NULL, font = NULL, b = FALSE, i = FALSE)"},{"path":"https://stasvlasov.github.io/nstandr/reference/paste_dot_node_tr_td.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes TR TD record for dot node TABLE — paste_dot_node_tr_td","text":"str content bg_color row's background color font row's font family b make bold make intallic","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/paste_dot_node_tr_td.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes TR TD record for dot node TABLE — paste_dot_node_tr_td","text":"string","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/replace_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"A wrapper for string replacement and cbinding some columns. — replace_patterns","title":"A wrapper for string replacement and cbinding some columns. — replace_patterns","text":"Optionally matches beginning end string.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/replace_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A wrapper for string replacement and cbinding some columns. — replace_patterns","text":"","code":"replace_patterns(   x,   patterns,   patterns_col = 1,   patterns_mode = \"all\",   patterns_mode_col = NULL,   patterns_type = \"fixed\",   patterns_type_col = NULL,   patterns_replacements_col = 2,   replacements = if (is.atomic(patterns)) \"\" else NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/replace_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A wrapper for string replacement and cbinding some columns. — replace_patterns","text":"x Vector table standardize. patterns Accepts vector table. patterns table can also include replacements column. patterns_col patterns vector column use. Default 1. patterns_mode Mode matching. one c(\"\", \"first\", \"last\"). default \"\" (2x faster \"first\" \"last\" handy stri_replace_all_* functions). Also possible pass vector (length patterns) patterns_mode_col Column patterns table mode matching patterns_type Type pattern matching. Default \"fixed\" (calling codestri_replace_all_fixed). options : patterns_type_col Column type pattern case patterns different types patterns_replacements_col patterns vector includes replacements column use replacements. Default 2. replacements patterns column replacements provide . ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/replace_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A wrapper for string replacement and cbinding some columns. — replace_patterns","text":"nothing indicated cbind results returns standardized vector. something needs cbind returns data.table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/save_dot_graph_as.html","id":null,"dir":"Reference","previous_headings":"","what":"Saves dot graph as file using system command 'dot' from GraphViz (https://graphviz.org/) if installed. — save_dot_graph_as","title":"Saves dot graph as file using system command 'dot' from GraphViz (https://graphviz.org/) if installed. — save_dot_graph_as","text":"Saves dot graph file using system command 'dot' GraphViz (https://graphviz.org/) installed.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/save_dot_graph_as.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saves dot graph as file using system command 'dot' from GraphViz (https://graphviz.org/) if installed. — save_dot_graph_as","text":"","code":"save_dot_graph_as(   dot_graph,   save_to_file = NULL,   save_as = c(\"png\", \"svg\", \"pdf\"),   width = NULL,   height = NULL )"},{"path":"https://stasvlasov.github.io/nstandr/reference/save_dot_graph_as.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saves dot graph as file using system command 'dot' from GraphViz (https://graphviz.org/) if installed. — save_dot_graph_as","text":"dot_graph Dot graph character string save_to_file Name file save . Without path relative path saves R's current working directory. NULL returns file content string. save_as File format. Default \"png\" width width procedures graph pixels height height procedures graph pixels","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/save_dot_graph_as.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Saves dot graph as file using system command 'dot' from GraphViz (https://graphviz.org/) if installed. — save_dot_graph_as","text":"Ethier raw file character string save_to_file NULL file name, .e. value save_to_file NULL","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardizes organizational names. Takes either vector or column in the table. — standardize","title":"Standardizes organizational names. Takes either vector or column in the table. — standardize","text":"Standardizes organizational names. Takes either vector column table.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardizes organizational names. Takes either vector or column in the table. — standardize","text":"","code":"standardize(   x,   procedures = nstandr_default_procedures_list,   show_progress = TRUE,   nrows_min_to_show_progress = 10^3,   progress_step_nrows = NULL,   progress_step_in_percent = 1,   progress_message_use_names = TRUE,   quite = FALSE,   save_intermediate_x_to_var = NULL,   ... )  make_std_names(   x,   procedures = nstandr_default_procedures_list,   show_progress = TRUE,   nrows_min_to_show_progress = 10^3,   progress_step_nrows = NULL,   progress_step_in_percent = 1,   progress_message_use_names = TRUE,   quite = FALSE,   save_intermediate_x_to_var = NULL,   ... )  make_standard_names(   x,   procedures = nstandr_default_procedures_list,   show_progress = TRUE,   nrows_min_to_show_progress = 10^3,   progress_step_nrows = NULL,   progress_step_in_percent = 1,   progress_message_use_names = TRUE,   quite = FALSE,   save_intermediate_x_to_var = NULL,   ... )  nstand(   x,   procedures = nstandr_default_procedures_list,   show_progress = TRUE,   nrows_min_to_show_progress = 10^3,   progress_step_nrows = NULL,   progress_step_in_percent = 1,   progress_message_use_names = TRUE,   quite = FALSE,   save_intermediate_x_to_var = NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardizes organizational names. Takes either vector or column in the table. — standardize","text":"x object (table) procedures procedures basically comprise standardization algorithm specified list either (1) names procedures function character strings (2) calls can provide optional arguments (3) nested lists allow user group procedures. Nesting lists procedures effect standardization progress reporting visualizing algorithms nstandr_plot. Technically nested lists equivalent plain list procedures produce results. Names list elements used progress messages. unnamed elements name procedure's function used standardization progress reporting. Default nstandr:::nstandr_default_procedures_list. show_progress Whether report progress percentage. Default TRUE nrows_min_to_show_progress minimum number rows x automatic progress estimation. x less rows progress shown. Default 10^5 progress_step_nrows set divide x chunk amount rows. Default NULL. progress_step_in_percent Number percents represent one step progress. Value 0.1 50. Default 1 means try chunk x 100 pieces. progress_message_use_names use names procedures list report progress. Default TRUE. quite Suppress messages. Default FALSE. save_intermediate_x_to_var debuging standartization procedures. Saves intermediate results variable. procedures finish without errors variable removed. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardizes organizational names. Takes either vector or column in the table. — standardize","text":"standardized data","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_cockburn.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardizes strings using exact procedures described in Cockburn, et al. (2009) — standardize_cockburn","title":"Standardizes strings using exact procedures described in Cockburn, et al. (2009) — standardize_cockburn","text":"Standardizes strings using exact procedures described Cockburn, et al. (2009)","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_cockburn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardizes strings using exact procedures described in Cockburn, et al. (2009) — standardize_cockburn","text":"","code":"standardize_cockburn(   x,   cockburn_procedures = nstandr_cookburn_procedures_list,   detect_legal_form = FALSE,   return_x_before_common_words_removal = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_cockburn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardizes strings using exact procedures described in Cockburn, et al. (2009) — standardize_cockburn","text":"x table vector cockburn_procedures list procedures pass standardize function. detect_legal_form Whether detect legal forms. Default FALSE return_x_before_common_words_removal Whether save standardized column common.words.removal procedure. Default FALSE ... Arguments passed standardize procedures procedures basically comprise standardization algorithm specified list either (1) names procedures function character strings (2) calls can provide optional arguments (3) nested lists allow user group procedures. Nesting lists procedures effect standardization progress reporting visualizing algorithms nstandr_plot. Technically nested lists equivalent plain list procedures produce results. Names list elements used progress messages. unnamed elements name procedure's function used standardization progress reporting. Default nstandr:::nstandr_default_procedures_list. show_progress Whether report progress percentage. Default TRUE nrows_min_to_show_progress minimum number rows x automatic progress estimation. x less rows progress shown. Default 10^5 progress_step_nrows set divide x chunk amount rows. Default NULL. progress_step_in_percent Number percents represent one step progress. Value 0.1 50. Default 1 means try chunk x 100 pieces. progress_message_use_names use names procedures list report progress. Default TRUE. quite Suppress messages. Default FALSE. save_intermediate_x_to_var debuging standartization procedures. Saves intermediate results variable. procedures finish without errors variable removed.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_cockburn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardizes strings using exact procedures described in Cockburn, et al. (2009) — standardize_cockburn","text":"standardized names table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_cockburn.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standardizes strings using exact procedures described in Cockburn, et al. (2009) — standardize_cockburn","text":"Cockburn, et al. (2009)","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_dehtmlize.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts HTML characters to UTF-8 — standardize_dehtmlize","title":"Converts HTML characters to UTF-8 — standardize_dehtmlize","text":"method 1/3 faster htmlParse still quite slow","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_dehtmlize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts HTML characters to UTF-8 — standardize_dehtmlize","text":"","code":"standardize_dehtmlize(   x,   as_single_string = FALSE,   as_single_string_sep = \"#_|\",   use_read_xml = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_dehtmlize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts HTML characters to UTF-8 — standardize_dehtmlize","text":"x object (table) as_single_string set collapse characters main column x (.e., x.col) single string. increase performance (least relatively short tables). Default FALSE as_single_string_sep delimiter collapsed strings uncollapse later. Default \"#_|\". use_read_xml set parse XML. Default FALSE means parses HTML ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_dehtmlize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts HTML characters to UTF-8 — standardize_dehtmlize","text":"updated object","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_dehtmlize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Converts HTML characters to UTF-8 — standardize_dehtmlize","text":"http://stackoverflow.com/questions/5060076","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_detect_enc.html","id":null,"dir":"Reference","previous_headings":"","what":"Detects string encoding — standardize_detect_enc","title":"Detects string encoding — standardize_detect_enc","text":"Detects string encoding","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_detect_enc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detects string encoding — standardize_detect_enc","text":"","code":"standardize_detect_enc(   x,   output_codes_col_name = \"{col_name_}encoding\",   return_only_codes = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_detect_enc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detects string encoding — standardize_detect_enc","text":"x object output_codes_col_name detect_patterns() return_only_codes detect_patterns() ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_detect_enc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detects string encoding — standardize_detect_enc","text":"updated object","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_is_data_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if all elements in vercor(s) are either ","title":"Checks if all elements in vercor(s) are either ","text":"Checks elements vercor(s) either \"\", NA, NULL zero length","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_is_data_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if all elements in vercor(s) are either ","text":"","code":"standardize_is_data_empty(x, return_as_true_if_x_zero_length = FALSE)"},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_is_data_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if all elements in vercor(s) are either ","text":"x input data check vector return_as_true_if_x_zero_length interpret zero lenth input. TRUE returns TRUE. Otherwise NULL.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_is_data_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks if all elements in vercor(s) are either ","text":"logical vector length","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_magerman.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardizes strings using exact procedures described in Magerman et al. 2009. — standardize_magerman","title":"Standardizes strings using exact procedures described in Magerman et al. 2009. — standardize_magerman","text":"Standardizes strings using exact procedures described Magerman et al. 2009.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_magerman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardizes strings using exact procedures described in Magerman et al. 2009. — standardize_magerman","text":"","code":"standardize_magerman(   x,   detect_legal_form = FALSE,   append_output_copy_before_common_words_removal = FALSE,   condense_words = FALSE,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_magerman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardizes strings using exact procedures described in Magerman et al. 2009. — standardize_magerman","text":"x table vector detect_legal_form Whether detect legal forms. Default FALSE append_output_copy_before_common_words_removal Whether save standardized column common.words.removal procedure. Default FALSE condense_words Whether remove spaces standard names ... Arguments passed standardize procedures procedures basically comprise standardization algorithm specified list either (1) names procedures function character strings (2) calls can provide optional arguments (3) nested lists allow user group procedures. Nesting lists procedures effect standardization progress reporting visualizing algorithms nstandr_plot. Technically nested lists equivalent plain list procedures produce results. Names list elements used progress messages. unnamed elements name procedure's function used standardization progress reporting. Default nstandr:::nstandr_default_procedures_list. show_progress Whether report progress percentage. Default TRUE nrows_min_to_show_progress minimum number rows x automatic progress estimation. x less rows progress shown. Default 10^5 progress_step_nrows set divide x chunk amount rows. Default NULL. progress_step_in_percent Number percents represent one step progress. Value 0.1 50. Default 1 means try chunk x 100 pieces. progress_message_use_names use names procedures list report progress. Default TRUE. quite Suppress messages. Default FALSE. save_intermediate_x_to_var debuging standartization procedures. Saves intermediate results variable. procedures finish without errors variable removed.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_magerman.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardizes strings using exact procedures described in Magerman et al. 2009. — standardize_magerman","text":"standardized names table","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_magerman.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standardizes strings using exact procedures described in Magerman et al. 2009. — standardize_magerman","text":"Magerman et al., 2006 - Data Production Methods Harmonized Patent Statistics: Patentee Name Standardization","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_make_procedures_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes list of procedures calls from table. — standardize_make_procedures_list","title":"Makes list of procedures calls from table. — standardize_make_procedures_list","text":"Table least two columns - messages fuctions calls. function call string following format \"'function.name', arg1 = val1, arg2 = val2\" (arguments .call function).","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_make_procedures_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes list of procedures calls from table. — standardize_make_procedures_list","text":"","code":"standardize_make_procedures_list(   procedures_table,   message_field = \"message\",   function_call_field = \"function.call\",   no_field = \"no\",   remove_comments = TRUE,   sort_by_no_field = TRUE,   comments = c(\"#\", \"-\", \"\") )"},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_make_procedures_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes list of procedures calls from table. — standardize_make_procedures_list","text":"procedures_table Table use message_field name column messages displayed call executed function_call_field name column function (standardization procedures) calls listed. no_field name column number procedure specified. Also field indicates row table just comment case removed remove_comments set (set default) remove_comments Whether remove comments. sort_by_no_field Whether sort list col named no_field comments Values (character string) first col makes entire row commented ","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_make_procedures_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes list of procedures calls from table. — standardize_make_procedures_list","text":"List named function calls. Names messages.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_omit_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes elements that are either ","title":"Removes elements that are either ","text":"Removes elements either \"\", NA, NULL zero length","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_omit_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes elements that are either ","text":"","code":"standardize_omit_empty(x)"},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_omit_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes elements that are either ","text":"x vector","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_omit_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes elements that are either ","text":"updated vector empty elements removed","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Does nothing but stores (as its own default arguments) options that control vector handeling through standardization process. These options are available in most nstandr functions that accept ... parameter. — standardize_options","title":"Does nothing but stores (as its own default arguments) options that control vector handeling through standardization process. These options are available in most nstandr functions that accept ... parameter. — standardize_options","text":"nothing stores (default arguments) options control vector handeling standardization process. options available nstandr functions accept ... parameter. procedure_index - replace 'procedure_index' number current standardization procedure list procedures procedure_name - replace 'procedure_name' name current standardization procedure _procedure_index - replace 'procedure_index' number current standardization procedure list procedures, prefixed '' procedure_name - replace 'procedure_name' name current standardization procedure, prefixed '' _col_name - replace 'col_name' name 'col' argument (.e., col input value), prefixed '' col_name_ - replace 'col_name_' name 'col' argument (.e., col input value), suffixed '_' col_name - replace 'col_name' name 'col' argument (.e., col input value) _index_suffix - Adds unique suffix (increment index) column name already exist. E.g. following format 'col_name_index_suffix' names(x) = c('V', 'V_9', 'V_41') col = 2 (.e. col_name = 'V_9' example) result new column named 'V_42'","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does nothing but stores (as its own default arguments) options that control vector handeling through standardization process. These options are available in most nstandr functions that accept ... parameter. — standardize_options","text":"","code":"standardize_options(   col = 1,   rows = NULL,   omitted_rows_value = NULL,   output_placement = \"replace_col\",   x_atomic_name = \"x\",   output_col_name = \"std{_col_name}\",   append_output_copy = FALSE,   output_copy_col_name = \"std{_col_name}_copy{_procedure_index}{_procedure_name}\" )"},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does nothing but stores (as its own default arguments) options that control vector handeling through standardization process. These options are available in most nstandr functions that accept ... parameter. — standardize_options","text":"col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does nothing but stores (as its own default arguments) options that control vector handeling through standardization process. These options are available in most nstandr functions that accept ... parameter. — standardize_options","text":"nothing. Returns NULL silently.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_remove_brackets.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes brackets and content in brackets — standardize_remove_brackets","title":"Removes brackets and content in brackets — standardize_remove_brackets","text":"Removes brackets content brackets","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_remove_brackets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes brackets and content in brackets — standardize_remove_brackets","text":"","code":"standardize_remove_brackets(x, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_remove_brackets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes brackets and content in brackets — standardize_remove_brackets","text":"x object (table) ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_remove_brackets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes brackets and content in brackets — standardize_remove_brackets","text":"updated object","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_remove_quotes.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes double quotes — standardize_remove_quotes","title":"Removes double quotes — standardize_remove_quotes","text":"Removes double quotes","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_remove_quotes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes double quotes — standardize_remove_quotes","text":"","code":"standardize_remove_quotes(x, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_remove_quotes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes double quotes — standardize_remove_quotes","text":"x object ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_remove_quotes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes double quotes — standardize_remove_quotes","text":"updated object","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_squish_spaces.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes redundant whitespases — standardize_squish_spaces","title":"Removes redundant whitespases — standardize_squish_spaces","text":"Removes redundant whitespases","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_squish_spaces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes redundant whitespases — standardize_squish_spaces","text":"","code":"standardize_squish_spaces(x, wrap_in_spaces = FALSE, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_squish_spaces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes redundant whitespases — standardize_squish_spaces","text":"x table vector wrap_in_spaces set adds leaing ending spaces. Default FALSE. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_squish_spaces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes redundant whitespases — standardize_squish_spaces","text":"updated table vector","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_toascii.html","id":null,"dir":"Reference","previous_headings":"","what":"Translates non-ascii symbols to its ascii equivalent — standardize_toascii","title":"Translates non-ascii symbols to its ascii equivalent — standardize_toascii","text":"Translates non-ascii symbols ascii equivalent","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_toascii.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translates non-ascii symbols to its ascii equivalent — standardize_toascii","text":"","code":"standardize_toascii(x, detect_encoding = FALSE, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_toascii.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translates non-ascii symbols to its ascii equivalent — standardize_toascii","text":"x String translate detect_encoding Detect encoding individual elements (slower). Allows work mixed encodings. ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_toupper.html","id":null,"dir":"Reference","previous_headings":"","what":"Uppercases vector of interest in the object (table) — standardize_toupper","title":"Uppercases vector of interest in the object (table) — standardize_toupper","text":"Uppercases vector interest object (table)","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_toupper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uppercases vector of interest in the object (table) — standardize_toupper","text":"","code":"standardize_toupper(x, ...)"},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_toupper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uppercases vector of interest in the object (table) — standardize_toupper","text":"x data ... Arguments passed standardize_options col Column interest (one need standardize) x object (data.frame like). rows Logical vector filter records interest. Default NULL means filter records. omitted_rows_value rows parameter set merge omitted_rows_value results (filtered rows). Either single string character vector length nrow(x). NULL (default) original values col merged results. output_placement inset retults (standardized vector) x object. Default options 'replace_col' overwrides col x results. options: 'omit' :: write results back table (usually used append_output_copy set temporary values) 'prepend_to_col' :: prepend col 'append_to_col' :: append col 'prepend_to_x' :: prepend x data.frame like object 'append_to_x' :: append x data.frame like object x_atomic_name x vector use name original column results. Default \"x\". x table name col used. output_col_name Use name column results (standardized values). Parts curly brakeds substitute strings. Options substitutions : append_output_copy Whether append copy result vector x object output_copy_col_name append copy wiil named","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_toupper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uppercases vector of interest in the object (table) — standardize_toupper","text":"updated data (data.table)","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_x_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Splits the object (table) in chunks by rows — standardize_x_split","title":"Splits the object (table) in chunks by rows — standardize_x_split","text":"Convenient apply function table chunks, e.g., want add display progress.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_x_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Splits the object (table) in chunks by rows — standardize_x_split","text":"","code":"standardize_x_split(x, by, len = NULL)"},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_x_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Splits the object (table) in chunks by rows — standardize_x_split","text":"x object table number rows split len length table (nrow). NULL use x_length(x)","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/standardize_x_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Splits the object (table) in chunks by rows — standardize_x_split","text":"List (sub)tables","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/unlist_if_possible.html","id":null,"dir":"Reference","previous_headings":"","what":"If column in the x table is list unlist it if possible — unlist_if_possible","title":"If column in the x table is list unlist it if possible — unlist_if_possible","text":"column x table list unlist possible","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/unlist_if_possible.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"If column in the x table is list unlist it if possible — unlist_if_possible","text":"","code":"unlist_if_possible(   x,   replace_zero_length_with = NA_character_,   remove_empty_values = TRUE )"},{"path":"https://stasvlasov.github.io/nstandr/reference/unlist_if_possible.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"If column in the x table is list unlist it if possible — unlist_if_possible","text":"x object replace_zero_length_with Default replace NULLs NA_character_ vector just NA logical class remove_empty_values remove NA, \"\", etc. list elements.  (see standardize_omit_empty())","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/unlist_if_possible.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"If column in the x table is list unlist it if possible — unlist_if_possible","text":"updated object","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/visualize.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualizes list of procedures. — visualize","title":"Visualizes list of procedures. — visualize","text":"Visualizes list procedures.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/visualize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualizes list of procedures. — visualize","text":"","code":"visualize(   procedures_list,   save_to_file = NULL,   save_as = NULL,   width = NULL,   height = NULL,   ... )"},{"path":"https://stasvlasov.github.io/nstandr/reference/visualize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualizes list of procedures. — visualize","text":"procedures_list List procedures. See sandardize specify procedures list. can character string standard procedure list (e.g., 'eee-ppat' Magerman et al., 2006 procedures). save_to_file set tries save visualization file format save_as dot system command (installed system). NULL tries open visualization browser (requires DiagrammeR R package installed.) save_as Type file save save_to_file NULL. specified (.e. NULL) tries guess type file save_to_file extention. Currently \"png\", \"svg\" \"pdf\" supported. width width procedures graph pixels height height procedures graph pixels ... Arguments passed make_dot_graph","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/visualize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualizes list of procedures. — visualize","text":"object class ‘htmlwidget’ can used Rmarkdown file name, .e. value save_to_file NULL.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/x_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets lengths of the object — x_length","title":"Gets lengths of the object — x_length","text":"Gets lengths object","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/x_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets lengths of the object — x_length","text":"","code":"x_length(x)"},{"path":"https://stasvlasov.github.io/nstandr/reference/x_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets lengths of the object — x_length","text":"x input data (table)","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/x_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets lengths of the object — x_length","text":"Length (nrow) object. atomic returns length.","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/x_width.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets width of the object — x_width","title":"Gets width of the object — x_width","text":"Gets width object","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/x_width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets width of the object — x_width","text":"","code":"x_width(x)"},{"path":"https://stasvlasov.github.io/nstandr/reference/x_width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets width of the object — x_width","text":"x object (table)","code":""},{"path":"https://stasvlasov.github.io/nstandr/reference/x_width.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets width of the object — x_width","text":"Width (ncol) object. atomic 1.","code":""}]
