% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/replace_patterns.r
\name{replace_patterns}
\alias{replace_patterns}
\title{A wrapper for string replacement and cbinding some columns.}
\usage{
replace_patterns(
  x,
  patterns,
  patterns_col = 1,
  patterns_mode = "all",
  patterns_mode_col = NULL,
  patterns_type = "fixed",
  patterns_type_col = NULL,
  patterns_replacements_col = 2,
  replacements = if (is.atomic(patterns)) "" else NULL,
  ...
)
}
\arguments{
\item{x}{Vector or table to harmonize.}

\item{patterns}{Accepts both vector or table. If patterns is a
table can also include replacements column.}

\item{patterns_col}{If patterns is not a vector which column to
use. Default is 1.}

\item{patterns_mode}{Mode of matching. Could be one of c("all",
"first", "last"). The default is "all" (it is 2x faster than
"first" and "last" because of handy stri_replace_all_*
functions). Also possible to pass a vector (same length as
patterns)}

\item{patterns_mode_col}{Column in patterns table with the mode of
matching}

\item{patterns_type}{Type of pattern for matching. Default is
"fixed" (calling
code{\link[stringi]{stri_replace_all_fixed}}). Other options
are:}

\item{patterns_type_col}{Column with the type of pattern in case
when patterns should have different types}

\item{patterns_replacements_col}{If patterns is not a vector and
includes replacements which column to use for
replacements. Default is 2.}

\item{replacements}{If patterns does not have column with
replacements provide it here.}

\item{...}{
  Arguments passed on to \code{\link[=harmonize_options]{harmonize_options}}
  \describe{
    \item{\code{col}}{Column of interest (the one we need to harmonize) in the \code{x} object (if it is data.frame like).}
    \item{\code{rows}}{Logical vector to filter records of interest. Default is NULL which means do not filter records.}
    \item{\code{ommitted_rows_values}}{If \code{rows} parameter is set then merge \code{ommitted_rows_values} with the results (filtered by \code{rows}). Either single string or a character vector of length \code{nrow(x)}. If NULL (the default) then original values of \code{col} are merged with results.}
    \item{\code{placement}}{Where to inset retults (harmonized vector) in the \code{x} object. Default options is 'replace_col' which overwrides the \code{col} in \code{x} with results. Other options:
\itemize{
\item 'omit' :: do not write results back to table (usually used when \code{append_copy} is set for temporary values)
\item 'prepend_to_col' :: prepend to \code{col}
\item 'append_to_col' :: append to \code{col}
\item 'prepend_to_x' :: prepend to \code{x} data.frame like object
\item 'append_to_x' :: append to \code{x} data.frame like object
}}
    \item{\code{name}}{Use this name for the column with results (harmonized values). Default is NA, which means that either \code{name_for_x_atomic} if \code{x} is vector or original col name will be used with \code{name_suffix} at the end.}
    \item{\code{name_for_x_atomic}}{If \code{x} is vector use this name for original column if it is in results. Default is "x". If \code{x} is table the name of \code{col} will be used.}
    \item{\code{name_suffix}}{If \code{name} is not set the use this as suffix (default is "harmonized"). If the name with the same suffix already exists in \code{select_x_cols} it will add counter at the end to avoid variables with the same names.}
    \item{\code{append_copy}}{Whether to append a copy of result vector to \code{x} object}
    \item{\code{append_copy_name_format}}{How the append copy wiil be named}
    \item{\code{select_cols}}{If x` object is table, set the columns to cbind to the result table. Default is cbind all but the original (unharmonized) column (col).}
  }}
}
\value{
If nothing was indicated to cbind to results then it
returns harmonized vector. If something is needs to be cbind
then it returns data.table
}
\description{
Optionally matches only at the beginning or at the end of the
string.
}
