% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/0_standardize_options.r
\name{standardize_options}
\alias{standardize_options}
\title{Does nothing but stores (as its own default arguments) options that control vector handeling through standardization process. These options are available in most nstandr functions that accept \code{...} parameter.}
\usage{
standardize_options(
  col = 1,
  rows = NULL,
  omitted_rows_value = NULL,
  output_placement = "replace_col",
  x_atomic_name = "x",
  output_col_name = "std{_col_name}",
  append_output_copy = FALSE,
  output_copy_col_name = "std{_col_name}_copy{_procedure_index}{_procedure_name}"
)
}
\arguments{
\item{col}{Column of interest (the one we need to standardize) in the \code{x} object (if it is data.frame like).}

\item{rows}{Logical vector to filter records of interest. Default is NULL which means do not filter records.}

\item{omitted_rows_value}{If \code{rows} parameter is set then merge \code{omitted_rows_value} with the results (filtered by \code{rows}). Either single string or a character vector of length \code{nrow(x)}. If NULL (the default) then original values of \code{col} are merged with results.}

\item{output_placement}{Where to inset retults (standardized vector) in the \code{x} object. Default options is 'replace_col' which overwrides the \code{col} in \code{x} with results. Other options:
\itemize{
\item 'omit' :: do not write results back to table (usually used when \code{append_output_copy} is set for temporary values)
\item 'prepend_to_col' :: prepend to \code{col}
\item 'append_to_col' :: append to \code{col}
\item 'prepend_to_x' :: prepend to \code{x} data.frame like object
\item 'append_to_x' :: append to \code{x} data.frame like object
}}

\item{x_atomic_name}{If \code{x} is vector use this name for original column if it is in results. Default is "x". If \code{x} is table the name of \code{col} will be used.}

\item{output_col_name}{Use this name for the column with results (standardized values). Parts in curly brakeds are substitute strings. Options for substitutions are:}

\item{append_output_copy}{Whether to append a copy of result vector to \code{x} object}

\item{output_copy_col_name}{How the append copy wiil be named}
}
\value{
It does nothing. Returns NULL silently.
}
\description{
Does nothing but stores (as its own default arguments) options that control vector handeling through standardization process. These options are available in most nstandr functions that accept \code{...} parameter.

\itemize{
\item {procedure_index} - replace '{procedure_index}' with a number of current standardization procedure is in the list of procedures
\item {procedure_name} - replace '{procedure_name}' with name of current standardization procedure
\item {_procedure_index} - replace '{\emph{procedure_index}' with a number of current standardization procedure is in the list of procedures, prefixed with '}'
\item {\emph{procedure_name} - replace '{procedure_name}' with name of current standardization procedure, prefixed with '}'
\item {_col_name} - replace '{\emph{col_name}' with the name of 'col' argument (i.e., col with input value), prefixed with '}'
\item {col_name_} - replace '{col_name_}' with the name of 'col' argument (i.e., col with input value), suffixed with '_'
\item {col_name} - replace '{col_name}' with the name of 'col' argument (i.e., col with input value)
\item {_index_suffix} - Adds unique suffix (increment index) if the column name already exist. E.g. the following format '{col_name}{_index_suffix}' for names(x) = c('V', 'V_9', 'V_41') and col = 2 (i.e. col_name = 'V_9' in this example) would result in a new column named 'V_42'
}
}
