% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/magerman.r
\name{magerman_remove_html_codes}
\alias{magerman_remove_html_codes}
\title{Removes html codes}
\usage{
magerman_remove_html_codes(
  x,
  patterns = "<BR>",
  patterns_col = 1,
  patterns_mode = "all",
  patterns_mode_col = NULL,
  patterns_type = "fixed",
  patterns_type_col = NULL,
  patterns_replacements_col = 2,
  replacements = " ",
  ...
)
}
\arguments{
\item{x}{Vector or table to standardize.}

\item{patterns}{Accepts both vector or table. If patterns is a
table can also include replacements column.}

\item{patterns_col}{If patterns is not a vector which column to
use. Default is 1.}

\item{patterns_mode}{Mode of matching. Could be one of c("all",
"first", "last"). The default is "all" (it is 2x faster than
"first" and "last" because of handy stri_replace_all_*
functions). Also possible to pass a vector (same length as
patterns)}

\item{patterns_mode_col}{Column in patterns table with the mode of
matching}

\item{patterns_type}{Type of pattern for matching. Default is
"fixed" (calling
code{\link[stringi]{stri_replace_all_fixed}}). Other options
are:}

\item{patterns_type_col}{Column with the type of pattern in case
when patterns should have different types}

\item{patterns_replacements_col}{If patterns is not a vector and
includes replacements which column to use for
replacements. Default is 2.}

\item{replacements}{If patterns does not have column with
replacements provide it here.}

\item{...}{
  Arguments passed on to \code{\link[=standardize_options]{standardize_options}}
  \describe{
    \item{\code{col}}{Column of interest (the one we need to standardize) in the \code{x} object (if it is data.frame like).}
    \item{\code{rows}}{Logical vector to filter records of interest. Default is NULL which means do not filter records.}
    \item{\code{omitted_rows_value}}{If \code{rows} parameter is set then merge \code{omitted_rows_value} with the results (filtered by \code{rows}). Either single string or a character vector of length \code{nrow(x)}. If NULL (the default) then original values of \code{col} are merged with results.}
    \item{\code{output_placement}}{Where to inset retults (standardized vector) in the \code{x} object. Default options is 'replace_col' which overwrides the \code{col} in \code{x} with results. Other options:
\itemize{
\item 'omit' :: do not write results back to table (usually used when \code{append_output_copy} is set for temporary values)
\item 'prepend_to_col' :: prepend to \code{col}
\item 'append_to_col' :: append to \code{col}
\item 'prepend_to_x' :: prepend to \code{x} data.frame like object
\item 'append_to_x' :: append to \code{x} data.frame like object
}}
    \item{\code{x_atomic_name}}{If \code{x} is vector use this name for original column if it is in results. Default is "x". If \code{x} is table the name of \code{col} will be used.}
    \item{\code{output_col_name}}{Use this name for the column with results (standardized values). Parts in curly brakeds are substitute strings. Options for substitutions are:}
    \item{\code{append_output_copy}}{Whether to append a copy of result vector to \code{x} object}
    \item{\code{output_copy_col_name}}{How the append copy wiil be named}
  }}
}
\value{
standardized names table
}
\description{
Removes html codes
}
\seealso{
replace_patterns

Other magerman: 
\code{\link{cockburn_detect_corp}()},
\code{\link{cockburn_detect_govt}()},
\code{\link{cockburn_detect_hosp}()},
\code{\link{cockburn_detect_indiv}()},
\code{\link{cockburn_detect_inst_conds_1}()},
\code{\link{cockburn_detect_inst}()},
\code{\link{cockburn_detect_univ}()},
\code{\link{cockburn_detect_uspto}()},
\code{\link{cockburn_remove_standard_names}()},
\code{\link{cockburn_remove_uspto}()},
\code{\link{cockburn_replace_compustat_names}()},
\code{\link{cockburn_replace_compustat}()},
\code{\link{cockburn_replace_derwent}()},
\code{\link{cockburn_replace_govt}()},
\code{\link{cockburn_replace_univ}()},
\code{\link{magerman_condense}()},
\code{\link{magerman_detect_characters}()},
\code{\link{magerman_detect_comma_period_irregularities}()},
\code{\link{magerman_detect_legal_form_beginning}()},
\code{\link{magerman_detect_legal_form_end}()},
\code{\link{magerman_detect_legal_form_middle}()},
\code{\link{magerman_detect_umlaut}()},
\code{\link{magerman_remove_common_words_anywhere}()},
\code{\link{magerman_remove_common_words_at_the_beginning}()},
\code{\link{magerman_remove_common_words_at_the_end}()},
\code{\link{magerman_remove_double_quotation_marks_beginning_end}()},
\code{\link{magerman_remove_double_quotation_marks_irregularities}()},
\code{\link{magerman_remove_double_spaces}()},
\code{\link{magerman_remove_non_alphanumeric_at_the_beginning}()},
\code{\link{magerman_remove_non_alphanumeric_at_the_end}()},
\code{\link{magerman_remove_special_characters}()},
\code{\link{magerman_replace_accented_characters}()},
\code{\link{magerman_replace_comma_period_irregularities_all}()},
\code{\link{magerman_replace_comma_period_irregularities}()},
\code{\link{magerman_replace_legal_form_beginning}()},
\code{\link{magerman_replace_legal_form_end}()},
\code{\link{magerman_replace_legal_form_middle}()},
\code{\link{magerman_replace_proprietary_characters}()},
\code{\link{magerman_replace_sgml_characters}()},
\code{\link{magerman_replace_spelling_variation}()}
}
\concept{magerman}
